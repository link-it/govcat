/*
 * GovCat - GovWay API Catalogue
 * https://github.com/link-it/govcat
 *
 * Copyright (c) 2021-2025 Link.it srl (https://link.it).
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3, as published by
 * the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
/*
 * GovWay Monitor API
 * Servizi per il monitoraggio di GovWay
 *
 * The version of the OpenAPI document: 3.3.13
 * Contact: info@link.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.govway.catalogo.gest.clients.govwaymonitor.model;

import java.io.IOException;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets TipoInformazioneEnum
 */
@JsonAdapter(TipoInformazioneEnum.Adapter.class)
public enum TipoInformazioneEnum {
  
  NUMERO_TRANSAZIONI("numero_transazioni"),
  
  OCCUPAZIONE_BANDA("occupazione_banda"),
  
  TEMPO_MEDIO_RISPOSTA("tempo_medio_risposta");

  private String value;

  TipoInformazioneEnum(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static TipoInformazioneEnum fromValue(String value) {
    for (TipoInformazioneEnum b : TipoInformazioneEnum.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<TipoInformazioneEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final TipoInformazioneEnum enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public TipoInformazioneEnum read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return TipoInformazioneEnum.fromValue(value);
    }
  }
}

