/*
 * GovCat - GovWay API Catalogue
 * https://github.com/link-it/govcat
 *
 * Copyright (c) 2021-2025 Link.it srl (https://link.it).
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3, as published by
 * the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
/*
 * GovWay Monitor API
 * Servizi per il monitoraggio di GovWay
 *
 * The version of the OpenAPI document: 3.3.13
 * Contact: info@link.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.govway.catalogo.gest.clients.govwaymonitor.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModelProperty;

/**
 * OccupazioneBanda
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-09-27T18:38:39.702666+02:00[Europe/Rome]")
public class OccupazioneBanda implements OneOfTipoInformazioneReportNumeroTransazioniTipoInformazioneReportOccupazioneBandaTipoInformazioneReportTempoMedioRisposta, OneOfTipoInformazioneReportMultiLineNumeroTransazioniTipoInformazioneReportMultiLineOccupazioneBandaTipoInformazioneReportMultiLineTempoMedioRisposta {
  public static final String SERIALIZED_NAME_TIPO = "tipo";
  @SerializedName(SERIALIZED_NAME_TIPO)
  private TipoInformazioneEnum tipo = TipoInformazioneEnum.OCCUPAZIONE_BANDA;

  public static final String SERIALIZED_NAME_OCCUPAZIONE_BANDA = "occupazione_banda";
  @SerializedName(SERIALIZED_NAME_OCCUPAZIONE_BANDA)
  private OccupazioneBandaTipi occupazioneBanda = new OccupazioneBandaTipi();


  public OccupazioneBanda tipo(TipoInformazioneEnum tipo) {
    
    this.tipo = tipo;
    return this;
  }

   /**
   * Get tipo
   * @return tipo
  **/
  @ApiModelProperty(required = true, value = "")

  public TipoInformazioneEnum getTipo() {
    return tipo;
  }


  public void setTipo(TipoInformazioneEnum tipo) {
    this.tipo = tipo;
  }


  public OccupazioneBanda occupazioneBanda(OccupazioneBandaTipi occupazioneBanda) {
    
    this.occupazioneBanda = occupazioneBanda;
    return this;
  }

   /**
   * Get occupazioneBanda
   * @return occupazioneBanda
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OccupazioneBandaTipi getOccupazioneBanda() {
    return occupazioneBanda;
  }


  public void setOccupazioneBanda(OccupazioneBandaTipi occupazioneBanda) {
    this.occupazioneBanda = occupazioneBanda;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OccupazioneBanda tipoInformazioneReportOccupazioneBanda = (OccupazioneBanda) o;
    return Objects.equals(this.tipo, tipoInformazioneReportOccupazioneBanda.tipo) &&
        Objects.equals(this.occupazioneBanda, tipoInformazioneReportOccupazioneBanda.occupazioneBanda);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tipo, occupazioneBanda);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OccupazioneBanda {\n");
    sb.append("    tipo: ").append(toIndentedString(tipo)).append("\n");
    sb.append("    occupazioneBanda: ").append(toIndentedString(occupazioneBanda)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

