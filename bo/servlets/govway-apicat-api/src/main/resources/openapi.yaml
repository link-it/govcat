openapi: 3.0.0
info:
  title: "GovCat - Catalogo API"
  description: "Registrazione e Adesione alle API"
  x-summary: "Registrazione e Adesione alle API"
  contact:
    name: ""
  version: "1.5.0"
  license:
    name: "GPL v3"
tags:
- name: "Configurazione"
- name: "Organizzazioni"
- name: "Soggetti"
- name: "Utenti"
- name: "Domini"
- name: "Gruppi"
- name: "Servizi"
- name: "API"
- name: "Tassonomie"
- name: "Adesioni"
- name: "Classi Utente"
- name: "Client"
- name: "Notifiche"
paths:
  /status:
    get:
      tags:
      - "Configurazione"
      description: "Status"
      operationId: "getStatus"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/problem+json:
              schema:
                type: string
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /info:
    get:
      tags:
      - "Configurazione"
      description: "Version"
      operationId: "getVersion"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                type: string
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /configurazione:
    get:
      tags:
      - "Configurazione"
      description: "Configurazione generale"
      operationId: "getConfigurazione"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Configurazione"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /profilo:
    get:
      tags:
      - "Utenti"
      description: "Info profilo attualmente loggato"
      operationId: "getProfilo"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profilo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    put:
      tags:
      - "Utenti"
      description: "Aggiornamento delle informazioni dell'utente chiamante"
      operationId: "updateProfilo"
      requestBody:
        description: "Dati per l'aggiornamento del Utente chiamante"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfiloUpdate'
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Utente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /notifiche:
    get:
      tags:
      - "Notifiche"
      description: "Restituisce le notifiche per l'utente corrente"
      operationId: "listNotifiche"
      parameters:
      - $ref: "#/components/parameters/q_query_optional"
      - $ref: "#/components/parameters/tipo_notifica_query_optional"
      - $ref: "#/components/parameters/stato_notifica_query_optional"
      - $ref: "#/components/parameters/tipo_entita_notifica_query_optional"
      - $ref: "#/components/parameters/id_entita_notifica_query_optional"
      - $ref: "#/components/parameters/id_mittente_query_optional"
      - $ref: "#/components/parameters/id_servizio_query_optional"
      - $ref: "#/components/parameters/id_adesione_query_optional"
      - $ref: "#/components/parameters/page_query_optional"
      - $ref: "#/components/parameters/size_query_optional"
      - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelItemNotifica"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /notifiche/count:
    get:
      tags:
      - "Notifiche"
      description: "Restituisce un conteggio delle notifiche per l'utente corrente"
      operationId: "countNotifiche"
      parameters:
      - $ref: "#/components/parameters/q_query_optional"
      - $ref: "#/components/parameters/tipo_notifica_query_optional"
      - $ref: "#/components/parameters/stato_notifica_query_optional"
      - $ref: "#/components/parameters/tipo_entita_notifica_query_optional"
      - $ref: "#/components/parameters/id_entita_notifica_query_optional"
      - $ref: "#/components/parameters/id_mittente_query_optional"
      - $ref: "#/components/parameters/id_servizio_query_optional"
      - $ref: "#/components/parameters/id_adesione_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CountNotifica"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /notifiche/{id_notifica}:
    parameters:
    - $ref: "#/components/parameters/id_notifica"
    get:
      tags:
      - "Notifiche"
      description: "Restituisce il dettaglio di una notifica"
      operationId: "getNotifica"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notifica"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    put:
      tags:
      - "Notifiche"
      description: "Aggiornamento della Notifica"
      operationId: "updateNotifica"
      requestBody:
        description: "Dati per l'aggiornamento della Notifica"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotifica'
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notifica"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /organizzazioni:
    get:
      tags:
      - "Organizzazioni"
      description: "Elenco delle Organizzazioni"
      operationId: "listOrganizzazioni"
      parameters:
      - $ref: "#/components/parameters/referente"
      - $ref: "#/components/parameters/aderente"
      - $ref: "#/components/parameters/esterna"
      - $ref: "#/components/parameters/soggetto_aderente"
      - $ref: "#/components/parameters/codice_ente_optional"
      - $ref: "#/components/parameters/codice_fiscale_ente_optional"
      - $ref: "#/components/parameters/tipo_ente_optional"
      - $ref: "#/components/parameters/id_organizzazione_query_optional"
      - $ref: "#/components/parameters/nome_query_optional"
      - $ref: "#/components/parameters/q_query_optional"
      - $ref: "#/components/parameters/page_query_optional"
      - $ref: "#/components/parameters/size_query_optional"
      - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelItemOrganizzazione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    post:
      tags:
      - "Organizzazioni"
      description: "Creazione di un'Organizzazione"
      operationId: "createOrganizzazione"
      requestBody:
        description: "Dati dell'Organizzazione da creare"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizzazioneCreate'
      responses:
        "201":
          description: "Operazione completata con successo"
          content: 
            application/json:
                schema:
                  $ref: "#/components/schemas/Organizzazione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /organizzazioni/{id_organizzazione}:
    parameters:
    - $ref: "#/components/parameters/id_organizzazione"
    get:
      tags:
      - "Organizzazioni"
      description: "Dettaglio dell'Organizzazione"
      operationId: "getOrganizzazione"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organizzazione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    put:
      tags:
      - "Organizzazioni"
      description: "Aggiornamento dell'Organizzazione"
      operationId: "updateOrganizzazione"
      requestBody:
        description: "Dati per l'aggiornamento dell'Organizzazione"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizzazioneUpdate'
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organizzazione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "Organizzazioni"
      description: "Cancellazione dell'Organizzazione"
      operationId: "deleteOrganizzazione"
      responses:
        "204":
          description: "Organizzazione eliminata con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /client:
    get:
      tags:
      - "Client"
      description: "Elenco dei Client"
      operationId: "listClient"
      parameters:
      - $ref: "#/components/parameters/id_soggetto_query_optional"
      - $ref: "#/components/parameters/nome_query_optional"
      - $ref: "#/components/parameters/id_organizzazione_query_optional"
      - $ref: "#/components/parameters/ambiente_query_optional"
      - $ref: "#/components/parameters/auth_type_query_optional"
      - $ref: "#/components/parameters/stato_client_query_optional"
      - $ref: "#/components/parameters/id_client_query_optional"
      - $ref: "#/components/parameters/q_query_optional"
      - $ref: "#/components/parameters/page_query_optional"
      - $ref: "#/components/parameters/size_query_optional"
      - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelItemClient"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    post:
      tags:
      - "Client"
      description: "Creazione di un Client"
      operationId: "createClient"
      requestBody:
        description: "Dati del Client da creare"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCreate'
      responses:
        "201":
          description: "Operazione completata con successo"
          content: 
            application/json:
                schema:
                  $ref: "#/components/schemas/Client"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /client/{id_client}/stato:
    parameters:
    - $ref: "#/components/parameters/id_client"
    put:
      tags:
      - "Client"
      description: "Aggiornamento del Client"
      operationId: "updateClientStato"
      requestBody:
        description: "Dati per l'aggiornamento del Client"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatoClientUpdate'
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "422":
          $ref: "#/components/responses/422UpdateEntitaComplessaSemanticamenteNonValida"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /client/{id_client}:
    parameters:
    - $ref: "#/components/parameters/id_client"
    get:
      tags:
      - "Client"
      description: "Dettaglio del Client"
      operationId: "getClient"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    put:
      tags:
      - "Client"
      description: "Aggiornamento del Client"
      operationId: "updateClient"
      requestBody:
        description: "Dati per l'aggiornamento del Client"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientUpdate'
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "Client"
      description: "Cancellazione del Client"
      operationId: "deleteClient"
      responses:
        "204":
          description: "Client eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /client/{id_client}/{id_allegato}/download:
    parameters:
    - $ref: "#/components/parameters/id_client"
    - $ref: "#/components/parameters/id_allegato"
    get:
      tags:
      - "Client"
      description: "Download allegati associati a un client"
      operationId: "downloadAllegatoClient"
      responses:
        "200":
          description: File allegato
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /soggetti:
    get:
      tags:
      - "Soggetti"
      description: "Elenco dei Soggetti"
      operationId: "listSoggetti"
      parameters:
      - $ref: "#/components/parameters/referente"
      - $ref: "#/components/parameters/aderente"
      - $ref: "#/components/parameters/nome_query_optional"
      - $ref: "#/components/parameters/id_organizzazione_query_optional"
      - $ref: "#/components/parameters/id_soggetto_query_optional"
      - $ref: "#/components/parameters/q_query_optional"
      - $ref: "#/components/parameters/page_query_optional"
      - $ref: "#/components/parameters/size_query_optional"
      - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelItemSoggetto"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    post:
      tags:
      - "Soggetti"
      description: "Creazione di un Soggetto"
      operationId: "createSoggetto"
      requestBody:
        description: "Dati del Soggetto da creare"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoggettoCreate'
      responses:
        "201":
          description: "Operazione completata con successo"
          content: 
            application/json:
                schema:
                  $ref: "#/components/schemas/Soggetto"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /soggetti/{id_soggetto}:
    parameters:
    - $ref: "#/components/parameters/id_soggetto"
    get:
      tags:
      - "Soggetti"
      description: "Dettaglio del Soggetto"
      operationId: "getSoggetto"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Soggetto"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    put:
      tags:
      - "Soggetti"
      description: "Aggiornamento del Soggetto"
      operationId: "updateSoggetto"
      requestBody:
        description: "Dati per l'aggiornamento del Soggetto"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoggettoUpdate'
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Soggetto"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "Soggetti"
      description: "Cancellazione del Soggetto"
      operationId: "deleteSoggetto"
      responses:
        "204":
          description: "Soggetto eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /classi-utente:
    get:
      tags:
      - "Classi Utente"
      description: "Elenco delle Classi Utente"
      operationId: "listClassiUtente"
      parameters:
      - $ref: "#/components/parameters/tipo_referente_classe_utente_query_optional"
      - $ref: "#/components/parameters/id_classe_utente_query_optional"
      - $ref: "#/components/parameters/q_query_optional"
      - $ref: "#/components/parameters/page_query_optional"
      - $ref: "#/components/parameters/size_query_optional"
      - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelItemClasseUtente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    post:
      tags:
      - "Classi Utente"
      description: "Creazione di una Classe Utente"
      operationId: "createClasseUtente"
      requestBody:
        description: "Dati della ClasseUtente da creare"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClasseUtenteCreate'
      responses:
        "201":
          description: "Operazione completata con successo"
          content: 
            application/json:
                schema:
                  $ref: "#/components/schemas/ClasseUtente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /classi-utente/{id_classe_utente}:
    parameters:
    - $ref: "#/components/parameters/id_classe_utente"
    get:
      tags:
      - "Classi Utente"
      description: "Dettaglio della Classe Utente"
      operationId: "getClasseUtente"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClasseUtente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    put:
      tags:
      - "Classi Utente"
      description: "Aggiornamento dellClasseUtentea Classe Utente"
      operationId: "updateClasseUtente"
      requestBody:
        description: "Dati per l'aggiornamento della ClasseUtente"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClasseUtenteUpdate'
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClasseUtente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "Classi Utente"
      description: "Cancellazione della Classe Utente"
      operationId: "deleteClasseUtente"
      responses:
        "204":
          description: "ClasseUtente eliminata con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /classi-utente/{id_classe_utente}/referenti:
    parameters:
    - $ref: "#/components/parameters/id_classe_utente"
    get:
      tags:
      - "Classi Utente"
      description: "Dettaglio del ClasseUtente"
      operationId: "listReferentiClasseUtente"
      parameters:
      - $ref: "#/components/parameters/q_query_optional"
      - $ref: "#/components/parameters/tipo_referente_classe_utente_query_optional"
      - $ref: "#/components/parameters/page_query_optional"
      - $ref: "#/components/parameters/size_query_optional"
      - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelReferenteClasseUtente"
    post:
      tags:
      - "Classi Utente"
      description: "Aggiunta di un referente della ClasseUtente"
      operationId: "createReferenteClasseUtente"
      requestBody:
        description: "Dati per l'aggiunta del referente della ClasseUtente"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferenteClasseUtenteCreate'
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReferenteClasseUtente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /classi-utente/{id_classe_utente}/referenti/{id_utente}:
    parameters:
    - $ref: "#/components/parameters/id_classe_utente"
    - $ref: "#/components/parameters/id_utente"
    delete:
      tags:
      - "Classi Utente"
      description: "Cancellazione del referente ClasseUtente"
      operationId: "deleteReferenteClasseUtente"
      parameters:
        - $ref: "#/components/parameters/tipo_referente_classe_utente_query_optional"
      responses:
        "204":
          description: "Referente ClasseUtente eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /utenti:
    get:
      tags:
      - "Utenti"
      description: "Elenco degli Utenti"
      operationId: "listUtenti"
      parameters:
      - $ref: "#/components/parameters/stato_utente_query_optional"
      - $ref: "#/components/parameters/id_organizzazione_query_optional"
      - $ref: "#/components/parameters/ruoli_query_optional"
      - $ref: "#/components/parameters/referente_tecnico_query_optional"
      - $ref: "#/components/parameters/classi_utente_query_optional"
      - $ref: "#/components/parameters/email_query_optional"
      - $ref: "#/components/parameters/principal_query_optional"
      - $ref: "#/components/parameters/id_utente_query_optional"
      - $ref: "#/components/parameters/q_query_optional"
      - $ref: "#/components/parameters/page_query_optional"
      - $ref: "#/components/parameters/size_query_optional"
      - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelItemUtente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    post:
      tags:
      - "Utenti"
      description: "Creazione di un Utente"
      operationId: "createUtente"
      requestBody:
        description: "Dati del Utente da creare"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UtenteCreate'
      responses:
        "201":
          description: "Operazione completata con successo"
          content: 
            application/json:
                schema:
                  $ref: "#/components/schemas/Utente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /utenti/{id_utente}:
    parameters:
    - $ref: "#/components/parameters/id_utente"
    get:
      tags:
      - "Utenti"
      description: "Dettaglio dell'Utente"
      operationId: "getUtente"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Utente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    put:
      tags:
      - "Utenti"
      description: "Aggiornamento dell'Utente"
      operationId: "updateUtente"
      requestBody:
        description: "Dati per l'aggiornamento del Utente"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UtenteUpdate'
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Utente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "Utenti"
      description: "Cancellazione dell'Utente"
      operationId: "deleteUtente"
      responses:
        "204":
          description: "Utente eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /utenti/{id_utente}/settings:
    parameters:
    - $ref: "#/components/parameters/id_utente"
    get:
      tags:
      - "Utenti"
      description: "Setting dell'Utente"
      operationId: "getUtenteSettings"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                type: object
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    put:
      tags:
      - "Utenti"
      description: "Aggiornamento dei Setting dell'Utente"
      operationId: "updateUtenteSettings"
      requestBody:
        description: "Dati per l'aggiornamento del Utente"
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                type: object
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /utenti/{id_utente}/settings/notifiche:
    parameters:
    - $ref: "#/components/parameters/id_utente"
    get:
      tags:
      - "Utenti"
      description: "Setting sulle notifiche dell'Utente"
      operationId: "getUtenteSettingsNotifiche"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigurazioneNotifiche"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    put:
      tags:
      - "Utenti"
      description: "Aggiornamento dei Setting delle Notifiche dell'Utente"
      operationId: "updateUtenteSettingsNotifiche"
      requestBody:
        description: "Dati per l'aggiornamento del Utente"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfigurazioneNotifiche"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigurazioneNotifiche"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /gruppi:
    get:
      tags:
      - "Gruppi"
      description: "Elenco dei Gruppi"
      operationId: "listGruppi"
      parameters:
      - $ref: "#/components/parameters/id_gruppo_padre_query_optional"
      - $ref: "#/components/parameters/gruppo_padre_null_query_optional"
      - $ref: "#/components/parameters/id_gruppo_query_optional"
      - $ref: "#/components/parameters/nome_query_optional"
      - $ref: "#/components/parameters/tipo_servizio_query_optional"
      - $ref: "#/components/parameters/q_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListItemGruppo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    post:
      tags:
      - "Gruppi"
      description: "Creazione di un Gruppo"
      operationId: "createGruppo"
      requestBody:
        description: "Dati del Gruppo da creare"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GruppoCreate'
      responses:
        "201":
          description: "Operazione completata con successo"
          content: 
            application/json:
                schema:
                  $ref: "#/components/schemas/Gruppo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /gruppi/{id_gruppo}:
    parameters:
    - $ref: "#/components/parameters/id_gruppo"
    get:
      tags:
      - "Gruppi"
      description: "Dettaglio del Gruppo"
      operationId: "getGruppo"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Gruppo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    put:
      tags:
      - "Gruppi"
      description: "Aggiornamento del Gruppo"
      operationId: "updateGruppo"
      requestBody:
        description: "Dati per l'aggiornamento del Gruppo"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GruppoUpdate'
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Gruppo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "Gruppi"
      description: "Cancellazione del Gruppo"
      operationId: "deleteGruppo"
      responses:
        "204":
          description: "Gruppo eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /gruppi/{id_gruppo}/immagine:
    parameters:
      - $ref: "#/components/parameters/id_gruppo"
    get:
      tags:
      - "Gruppi"
      description: "Download immagine del Gruppo"
      operationId: "getImmagineGruppo"
      responses:
        "200":
          description: File Allegato
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /domini:
    get:
      tags:
      - "Domini"
      description: "Elenco dei Domini"
      operationId: "listDomini"
      parameters:
      - $ref: "#/components/parameters/id_dominio_query_optional"
      - $ref: "#/components/parameters/nome_query_optional"
      - $ref: "#/components/parameters/id_soggetto_query_optional"
      - $ref: "#/components/parameters/visibilita_dominio_query_optional"
      - $ref: "#/components/parameters/deprecato_query_optional"
      - $ref: "#/components/parameters/esterno_query_optional"
      - $ref: "#/components/parameters/q_query_optional"
      - $ref: "#/components/parameters/page_query_optional"
      - $ref: "#/components/parameters/size_query_optional"
      - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelItemDominio"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    post:
      tags:
      - "Domini"
      description: "Creazione di un Dominio"
      operationId: "createDominio"
      requestBody:
        description: "Dati del Dominio da creare"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DominioCreate'
      responses:
        "201":
          description: "Operazione completata con successo"
          content: 
            application/json:
                schema:
                  $ref: "#/components/schemas/Dominio"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /domini/{id_dominio}:
    parameters:
    - $ref: "#/components/parameters/id_dominio"
    get:
      tags:
      - "Domini"
      description: "Dettaglio del Dominio"
      operationId: "getDominio"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dominio"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    put:
      tags:
      - "Domini"
      description: "Aggiornamento del Dominio"
      operationId: "updateDominio"
      requestBody:
        description: "Dati per l'aggiornamento del Dominio"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DominioUpdate'
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dominio"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "Domini"
      description: "Cancellazione del Dominio"
      operationId: "deleteDominio"
      responses:
        "204":
          description: "Dominio eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /domini/{id_dominio}/referenti:
    parameters:
    - $ref: "#/components/parameters/id_dominio"
    get:
      tags:
      - "Domini"
      description: "Dettaglio del Dominio"
      operationId: "listReferentiDominio"
      parameters:
      - $ref: "#/components/parameters/q_query_optional"
      - $ref: "#/components/parameters/tipo_referente_query_optional"
      - $ref: "#/components/parameters/page_query_optional"
      - $ref: "#/components/parameters/size_query_optional"
      - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelReferente"
    post:
      tags:
      - "Domini"
      description: "Aggiunta di un referente del Dominio"
      operationId: "createReferenteDominio"
      requestBody:
        description: "Dati per l'aggiunta del referente del Dominio"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferenteCreate'
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Referente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /domini/{id_dominio}/referenti/{id_utente}:
    parameters:
    - $ref: "#/components/parameters/id_dominio"
    - $ref: "#/components/parameters/id_utente"
    delete:
      tags:
      - "Domini"
      description: "Cancellazione del referente Dominio"
      operationId: "deleteReferenteDominio"
      parameters:
        - $ref: "#/components/parameters/tipo_referente_query_optional"
      responses:
        "204":
          description: "Referente Dominio eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi_gruppi:
    get:
      tags:
      - "Servizi"
      description: "Elenco dei Servizi"
      operationId: "listServiziGruppi"
      parameters:
      - $ref: "#/components/parameters/id_gruppo_padre_query_optional"
      - $ref: "#/components/parameters/gruppo_padre_null_query_optional"
      - $ref: "#/components/parameters/tipo_servizio_query_optional"
      - $ref: "#/components/parameters/q_query_optional"
      - $ref: "#/components/parameters/page_query_optional"
      - $ref: "#/components/parameters/size_query_optional"
      - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelItemServizioGruppo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi-export:
    get:
      tags:
      - "Servizi"
      description: "Elenco dei Servizi"
      operationId: "exportServizi"
      parameters:
      - $ref: "#/components/parameters/referente_query_optional"
      - $ref: "#/components/parameters/id_dominio_query_optional"
      - $ref: "#/components/parameters/id_gruppo_padre_query_optional"
      - $ref: "#/components/parameters/visibilita_servizio_query_optional"
      - $ref: "#/components/parameters/id_api_query_optional"
      - $ref: "#/components/parameters/stato_query_optional"
      - $ref: "#/components/parameters/categoria_query_optional"
      - $ref: "#/components/parameters/tag_query_optional"
      - $ref: "#/components/parameters/in_attesa_query_optional"
      - $ref: "#/components/parameters/miei_servizi_query_optional"
      - $ref: "#/components/parameters/adesione_consentita_query_optional"
      - $ref: "#/components/parameters/nome_query_optional"
      - $ref: "#/components/parameters/versione_query_optional"
      - $ref: "#/components/parameters/id_servizio_query_optional_multi"
      - $ref: "#/components/parameters/q_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            text/csv:
              schema:
                type: string
                format: binary
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi:
    get:
      tags:
      - "Servizi"
      description: "Elenco dei Servizi"
      operationId: "listServizi"
      parameters:
      - $ref: "#/components/parameters/referente_query_optional"
      - $ref: "#/components/parameters/id_dominio_query_optional"
      - $ref: "#/components/parameters/id_gruppo_padre_query_optional"
      - $ref: "#/components/parameters/visibilita_servizio_query_optional"
      - $ref: "#/components/parameters/id_api_query_optional"
      - $ref: "#/components/parameters/stato_query_optional"
      - $ref: "#/components/parameters/categoria_query_optional"
      - $ref: "#/components/parameters/tag_query_optional"
      - $ref: "#/components/parameters/in_attesa_query_optional"
      - $ref: "#/components/parameters/miei_servizi_query_optional"
      - $ref: "#/components/parameters/adesione_consentita_query_optional"
      - $ref: "#/components/parameters/nome_query_optional"
      - $ref: "#/components/parameters/versione_query_optional"
      - $ref: "#/components/parameters/id_servizio_query_optional_multi"
      - $ref: "#/components/parameters/package_query_optional"
      - $ref: "#/components/parameters/tipo_servizio_query_optional"
      - $ref: "#/components/parameters/q_query_optional"
      - $ref: "#/components/parameters/page_query_optional"
      - $ref: "#/components/parameters/size_query_optional"
      - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelItemServizio"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    post:
      tags:
      - "Servizi"
      description: "Creazione di un Servizio"
      operationId: "createServizio"
      requestBody:
        description: "Dati del Servizio da creare"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServizioCreate'
      responses:
        "201":
          description: "Operazione completata con successo"
          content: 
            application/json:
                schema:
                  $ref: "#/components/schemas/Servizio"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi/{id_servizio}:
    parameters:
      - $ref: "#/components/parameters/id_servizio"
    get:
      tags:
      - "Servizi"
      description: "Dati del Servizio"
      operationId: "getServizio"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Servizio"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    put:
      tags:
      - "Servizi"
      description: "Aggiornamento dei dati identificativi del Servizio"
      operationId: "updateServizio"
      requestBody:
        description: "Dati per l'aggiornamento dei dati identificativi del Servizio"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServizioUpdate'
      responses:
        "200":
          description: "Operazione completata con successo"
          content: 
            application/json:
                schema:
                  $ref: "#/components/schemas/Servizio"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "422":
          $ref: "#/components/responses/422UpdateEntitaComplessaSemanticamenteNonValida"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "Servizi"
      description: "Cancellazione del Servizio"
      operationId: "deleteServizio"
      responses:
        "204":
          description: "Servizio eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi/{id_servizio}/grant:
    parameters:
      - $ref: "#/components/parameters/id_servizio"
    get:
      tags:
      - "Servizi"
      description: "Grant che l'utente ha per un determinato Servizio"
      operationId: "getGrantServizio"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Grant"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi/{id_servizio}/ammissibili:
    parameters:
      - $ref: "#/components/parameters/id_servizio"
    get:
      tags:
      - "Servizi"
      description: "Organizzazioni che possono aderire a un determinato Servizio"
      operationId: "listOrganizzazioniAmmissibili"
      parameters:
        - $ref: "#/components/parameters/q_query_optional"
        - $ref: "#/components/parameters/page_query_optional"
        - $ref: "#/components/parameters/size_query_optional"
        - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelItemOrganizzazione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi/{id_servizio}/immagine:
    parameters:
      - $ref: "#/components/parameters/id_servizio"
    get:
      tags:
      - "Servizi"
      description: "Download immagine del Servizio"
      operationId: "getImmagineServizio"
      responses:
        "200":
          description: File Allegato
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi/{id_servizio}/export:
    parameters:
    - $ref: "#/components/parameters/id_servizio"
    get:
      tags:
      - "Servizi"
      description: "Info servizio"
      operationId: "exportServizio"
      responses:
        "200":
          description: File Allegato
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi/{id_servizio}/comunicazioni:
    parameters:
    - $ref: "#/components/parameters/id_servizio"
    get:
      tags:
      - "Servizi"
      description: "Elenco dei messaggi e dei cambi di stato presenti nell'iter di lavorazione di un servizio"
      operationId: "listComunicazioniServizio"
      parameters:
        - $ref: "#/components/parameters/page_query_optional"
        - $ref: "#/components/parameters/size_query_optional"
        - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelItemComunicazione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi/{id_servizio}/stato:
    parameters:
    - $ref: "#/components/parameters/id_servizio"
    post:
      tags:
      - "Servizi"
      description: "Aggiornamento dello stato del Servizio"
      operationId: "updateStatoServizio"
      requestBody:
        description: "Dati per l'aggiornamento dei dati identificativi del Servizio"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatoUpdate'
      responses:
        "201":
          description: "Operazione completata con successo"
          content: 
            application/json:
                schema:
                  $ref: "#/components/schemas/Servizio"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "422":
          $ref: "#/components/responses/422UpdateEntitaComplessaSemanticamenteNonValida"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi/{id_servizio}/referenti:
    parameters:
    - $ref: "#/components/parameters/id_servizio"
    get:
      tags:
      - "Servizi"
      description: "Dettaglio del Servizio"
      operationId: "listReferentiServizio"
      parameters:
      - $ref: "#/components/parameters/q_query_optional"
      - $ref: "#/components/parameters/tipo_referente_query_optional"
      - $ref: "#/components/parameters/page_query_optional"
      - $ref: "#/components/parameters/size_query_optional"
      - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelReferente"
    post:
      tags:
      - "Servizi"
      description: "Aggiunta di un referente del Servizio"
      operationId: "createReferenteServizio"
      requestBody:
        description: "Dati per l'aggiunta del referente del Servizio"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferenteCreate'
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Referente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi/{id_servizio}/referenti/{id_utente}:
    parameters:
    - $ref: "#/components/parameters/id_servizio"
    - $ref: "#/components/parameters/id_utente"
    delete:
      tags:
      - "Servizi"
      description: "Cancellazione del referente Servizio"
      operationId: "deleteReferenteServizio"
      parameters:
        - $ref: "#/components/parameters/tipo_referente_query_optional"
      responses:
        "204":
          description: "Referente eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi/{id_package}/componenti:
    parameters:
    - $ref: "#/components/parameters/id_package"
    get:
      tags:
      - "Servizi"
      description: "lista dei componenti del Package"
      operationId: "listComponentiPackage"
      x-spring-paginated: true
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelComponente"
  /servizi/{id_package}/componenti/{id_componente}:
    parameters:
    - $ref: "#/components/parameters/id_package"
    - $ref: "#/components/parameters/id_componente"
    put:
      tags:
      - "Servizi"
      description: "Aggiunta di un componente al Package"
      operationId: "associaComponentePackage"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Servizio"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "Servizi"
      description: "Cancellazione del componente dal Package"
      operationId: "deleteComponentePackage"
      responses:
        "204":
          description: "Componente eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi/{id_servizio}/gruppi:
    parameters:
    - $ref: "#/components/parameters/id_servizio"
    get:
      tags:
      - "Servizi"
      description: "Dettaglio del Servizio"
      operationId: "listGruppiServizio"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListItemGruppo"
  /servizi/{id_servizio}/gruppi/{id_gruppo}:
    parameters:
    - $ref: "#/components/parameters/id_servizio"
    - $ref: "#/components/parameters/id_gruppo"
    post:
      tags:
      - "Servizi"
      description: "Aggiunta di un gruppo al Servizio"
      operationId: "addGruppoServizio"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemGruppo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "Servizi"
      description: "Cancellazione del gruppo Servizio"
      operationId: "deleteGruppoServizio"
      responses:
        "204":
          description: "Gruppo eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi/{id_servizio}/categorie:
    parameters:
    - $ref: "#/components/parameters/id_servizio"
    get:
      tags:
      - "Servizi"
      description: "Categorie del Servizio"
      operationId: "listCategorieServizio"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListItemCategoria"
    post:
      tags:
      - "Servizi"
      description: "Aggiunta di categorie al Servizio"
      operationId: "addCategorieServizio"
      requestBody:
        description: "Dati del messaggio da aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategorieCreate"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListItemCategoria"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi/{id_servizio}/categorie/{id_categoria}:
    parameters:
    - $ref: "#/components/parameters/id_servizio"
    - $ref: "#/components/parameters/id_categoria"
    delete:
      tags:
      - "Servizi"
      description: "Cancellazione della categoria dal Servizio"
      operationId: "deleteCategoriaServizio"
      responses:
        "204":
          description: "Categoria eliminata con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi/{id_servizio}/messaggi:
    parameters:
    - $ref: "#/components/parameters/id_servizio"
    post:
      tags:
      - "Servizi"
      description: "Aggiunta di un messaggio all'iter di lavorazione di un servizio"
      operationId: "createMessaggioServizio"
      requestBody:
        description: "Dati del messaggio da aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MessaggioCreate"
        required: true
      responses:
        "201":
          description: "Operazione completata con successo"
          content: 
            application/json:
                schema:
                  $ref: "#/components/schemas/ItemMessaggio"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    get:
      tags:
      - "Servizi"
      description: "Elenco dei messaggi presenti nell'iter di lavorazione di un servizio"
      operationId: "listMessaggiServizio"
      parameters:
      - $ref: "#/components/parameters/q_query_optional"
      - $ref: "#/components/parameters/page_query_optional"
      - $ref: "#/components/parameters/size_query_optional"
      - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelItemMessaggio"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi/{id_servizio}/messaggi/{id_messaggio}:
    parameters:
    - $ref: "#/components/parameters/id_servizio"
    - $ref: "#/components/parameters/id_messaggio"
    put:
      tags:
      - "Servizi"
      description: "Aggiornamento di un messaggio all'iter di lavorazione di un servizio"
      operationId: "updateMessaggioServizio"
      requestBody:
        description: "Dati del messaggio da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MessaggioUpdate"
        required: true
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemMessaggio"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "Servizi"
      description: "Cancellazione di un messaggio presente nell'iter di lavorazione di un servizio"
      operationId: "deleteMessaggioServizio"
      responses:
        "204":
          description: "Allegato eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi/{id_servizio}/messaggi/{id_messaggio}/allegati/{id_allegato}/download:
    parameters:
    - $ref: "#/components/parameters/id_servizio"
    - $ref: "#/components/parameters/id_messaggio"
    - $ref: "#/components/parameters/id_allegato"
    get:
      tags:
        - "Servizi"
      description: Download di un file allegato ad un messaggio relativo all'iter di lavorazione del servizio
      operationId: downloadAllegatoMessaggioServizio
      responses:
        "200":
          description: File allegato
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi/{id_servizio}/messaggi/{id_messaggio}/allegati:
    parameters:
    - $ref: "#/components/parameters/id_servizio"
    - $ref: "#/components/parameters/id_messaggio"
    post:
      tags:
      - "Servizi"
      description: Creazione allegato ad un messaggio relativo ad una comunicazione del servizio
      operationId: createAllegatoMessaggioServizio
      requestBody:
        description: "Dati dell'allegato da aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AllegatoMessaggioCreate"
        required: true
      responses:
        "201":
          description: "Operazione completata con successo"
          content: 
            application/json:
                schema:
                  $ref: "#/components/schemas/AllegatoMessaggio"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi/{id_servizio}/messaggi/{id_messaggio}/allegati/{id_allegato}:
    parameters:
    - $ref: "#/components/parameters/id_servizio"
    - $ref: "#/components/parameters/id_messaggio"
    - $ref: "#/components/parameters/id_allegato"
    delete:
      tags:
      - "Servizi"
      description: "Eliminazione di un allegato dall'iter di lavorazione del servizio"
      operationId: "deleteAllegatoMessaggioServizio"
      responses:
        "204":
          description: "Allegato eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi/{id_servizio}/allegati:
    parameters:
    - $ref: "#/components/parameters/id_servizio"
    post:
      tags:
      - "Servizi"
      description: "Aggiunta di un allegato al servizio"
      operationId: "createAllegatoServizio"
      requestBody:
        required: true      
        description: "Dati dell'allegato da aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AllegatoCreate"
      responses:
        "201":
          description: "Operazione completata con successo"
          content: 
            application/json:
                schema:
                  $ref: "#/components/schemas/AllegatoList"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    get:
      tags:
      - "Servizi"
      description: "Lista degli allegati al servizio"
      operationId: "listAllegatiServizio"
      parameters:
      - $ref: "#/components/parameters/q_query_optional"
      - $ref: "#/components/parameters/filename_query_optional"
      - $ref: "#/components/parameters/tipologia_allegato_query_optional"
      - $ref: "#/components/parameters/visibilita_allegato_query_optional"
      - $ref: "#/components/parameters/page_query_optional"
      - $ref: "#/components/parameters/size_query_optional"
      - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content: 
            application/json:
                schema:
                  $ref: "#/components/schemas/PagedModelAllegato"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi/{id_servizio}/allegati/{id_allegato}/download:
    get:
      tags:
      - "Servizi"
      description: "Download di un file allegato alla descrizione del servizio"
      operationId: downloadAllegatoServizio
      parameters:
      - $ref: "#/components/parameters/id_servizio"
      - $ref: "#/components/parameters/id_allegato"
      responses:
        "200":
          description: File allegato
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /servizi/{id_servizio}/allegati/{id_allegato}:
    parameters:
    - $ref: "#/components/parameters/id_servizio"
    - $ref: "#/components/parameters/id_allegato"
    put:
      tags:
      - "Servizi"
      description: "Modifica di un allegato al Servizio"
      operationId: "updateAllegatoServizio"
      requestBody:
        description: "Dati per la modifica dell'allegato al Servizio"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllegatoUpdate'
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Allegato"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "Servizi"
      description: "Eliminazione di un allegato dal servizio"
      operationId: "deleteAllegatoServizio"
      responses:
        "204":
          description: "Allegato eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /tags:
    get:
      tags:
      - "Servizi"
      description: "Elenco dei tags registrati sul catalogo"
      operationId: "listTags"
      parameters:
      - $ref: "#/components/parameters/q_query_optional"
      - $ref: "#/components/parameters/page_query_optional"
      - $ref: "#/components/parameters/size_query_optional"
      - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/String255"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /api:
    post:
      tags:
      - "API"
      description: "Creazione di un componente"
      operationId: "createApi"
      requestBody:
        required: true      
        description: "Dati della API che deve essere creata"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/APICreate"
      responses:
        "201":
          description: "Operazione completata con successo"
          content: 
              application/json:
                schema:
                    $ref: "#/components/schemas/API"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    get:
      tags:
      - "API"
      description: "Elenco delle API"
      operationId: "listAPI"
      parameters:
      - $ref: "#/components/parameters/id_servizio_query_optional"
      - $ref: "#/components/parameters/ruolo_query_optional"
      - $ref: "#/components/parameters/id_api_query_optional"
      - $ref: "#/components/parameters/nome_query_optional"
      - $ref: "#/components/parameters/versione_query_optional"
      - $ref: "#/components/parameters/q_query_optional"
      - $ref: "#/components/parameters/page_query_optional"
      - $ref: "#/components/parameters/size_query_optional"
      - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelItemApi"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /api/{id_api}:
    parameters:
    - $ref: "#/components/parameters/id_api"
    get:
      tags:
      - "API"
      description: "Dettaglio del componente"
      operationId: "getAPI"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/API"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "API"
      description: "Eliminazione di un componente"
      operationId: "deleteAPI"
      responses:
        "200":
          description: "API eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    put:
      tags:
      - "API"
      description: "Aggiornamento della API"
      operationId: "updateApi"
      requestBody:
        required: true      
        description: "Dati per l'aggiornamento della API"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiUpdate"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/API"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /api/{id_api}/token-policy:
    parameters:
    - $ref: "#/components/parameters/id_api"
    get:
      tags:
      - "API"
      description: "Dettaglio della token policy del componente"
      operationId: "getTokenPolicyAPI"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigurazioneTokenPolicy"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /api/{id_api}/specifica/{id_ambiente}/download:
    get:
      tags:
      - "API"
      description: "Download della specifica di un componente"
      operationId: downloadSpecificaAPI
      parameters:
      - $ref: "#/components/parameters/id_api"
      - $ref: "#/components/parameters/id_ambiente"
      - $ref: "#/components/parameters/versione_query_optional"
      - $ref: "#/components/parameters/includi_doc_allegati_query_optional"
      - $ref: "#/components/parameters/try_out_query_optional"
      responses:
        "200":
          description: Specifica
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /api/{id_api}/export:
    parameters:
    - $ref: "#/components/parameters/id_api"
    get:
      tags:
      - "API"
      description: "Info componente"
      operationId: "exportAPI"
      responses:
        "200":
          description: File Allegato
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /api/{id_api}/allegati/{id_allegato}/download:
    get:
      tags:
      - "API"
      description: "Download dell'allegato di un componente"
      operationId: downloadAllegatoAPI
      parameters:
      - $ref: "#/components/parameters/id_api"
      - $ref: "#/components/parameters/id_allegato"
      responses:
        "200":
          description: File Allegato
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /api/{id_api}/allegati/{id_allegato}:
    parameters:
    - $ref: "#/components/parameters/id_api"
    - $ref: "#/components/parameters/id_allegato"
    put:
      tags:
      - "API"
      description: "Modifica di un allegato alla API"
      operationId: "updateAllegatoAPI"
      requestBody:
        description: "Dati per la modifica dell'allegato alla API"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllegatoUpdate'
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Allegato"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "API"
      description: "Eliminazione di un allegato dalla API"
      operationId: "deleteAllegatoAPI"
      responses:
        "200":
          description: "Allegato eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /api/{id_api}/allegati:
    parameters:
    - $ref: "#/components/parameters/id_api"
    post:
      tags:
      - "API"
      description: "Aggiunta di un allegato al componente"
      operationId: "createAllegatoAPI"
      requestBody:
        required: true      
        description: "Dati dell'allegato da aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AllegatoCreate"
      responses:
        "201":
          description: "Operazione completata con successo"
          content: 
            application/json:
                schema:
                  $ref: "#/components/schemas/AllegatoList"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    get:
      tags:
      - "API"
      description: "Lista degli allegati alla API"
      operationId: "listAllegatiApi"
      parameters:
      - $ref: "#/components/parameters/q_query_optional"
      - $ref: "#/components/parameters/filename_query_optional"
      - $ref: "#/components/parameters/tipologia_allegato_query_optional"
      - $ref: "#/components/parameters/visibilita_allegato_query_optional"
      - $ref: "#/components/parameters/page_query_optional"
      - $ref: "#/components/parameters/size_query_optional"
      - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content: 
            application/json:
                schema:
                  $ref: "#/components/schemas/PagedModelAllegato"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /tassonomie:
    get:
      tags:
      - "Tassonomie"
      description: "Elenco delle Tassonomie"
      operationId: "listTassonomie"
      parameters:
      - $ref: "#/components/parameters/id_tassonomia_query_optional"
      - $ref: "#/components/parameters/q_query_optional"
      - $ref: "#/components/parameters/page_query_optional"
      - $ref: "#/components/parameters/size_query_optional"
      - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelItemTassonomia"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    post:
      tags:
      - "Tassonomie"
      description: Creazione di una Tassonomia
      operationId: "createTassonomia"
      requestBody:
          required: true      
          description: "Tassonomia da creare"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TassonomiaCreate"
      responses:
        "201":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tassonomia"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /tassonomie/{id_tassonomia}:
    parameters:
      - $ref: "#/components/parameters/id_tassonomia"
    get:
      tags:
      - "Tassonomie"
      description: "Dettaglio di una Tassonomia"
      operationId: "getTassonomia"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tassonomia"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    put:
      tags:
      - "Tassonomie"
      description: "Aggiornamento di una tassonomia"
      operationId: "updateTassonomia"
      requestBody:
          required: true         
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TassonomiaUpdate"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tassonomia"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "Tassonomie"
      description: Cancellazione di una Tassonomia
      operationId: "deleteTassonomia"
      responses:
        "200":
          description: "Tassonomia cancellata con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /tassonomie/{id_tassonomia}/categorie:
    parameters:
      - $ref: "#/components/parameters/id_tassonomia"
    post:
      tags:
      - "Tassonomie"
      description: "Aggiunta di una categoria alla tassonomia"
      operationId: "createTassonomiaCategoria"
      requestBody:
        required: true      
        description: "OK"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoriaCreate"
      responses:
        "201":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Categoria"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    get:
      tags:
      - "Tassonomie"
      description: "Elenco delle categorie di una tassonomia"
      operationId: "listCategorie"
      parameters:
        - $ref: "#/components/parameters/q_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListItemCategoria"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "404":
          $ref: "#/components/responses/404NotFound"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /tassonomie/{id_tassonomia}/categorie/{id_categoria}:
    parameters:
      - $ref: "#/components/parameters/id_tassonomia"
      - $ref: "#/components/parameters/id_categoria"
    delete:
      tags:
      - "Tassonomie"
      description: Cancellazione di una categoria da una tassonomia
      operationId: "deleteCategoria"
      responses:
        "200":
          description: "Categoria eliminata con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    get:
      tags:
      - "Tassonomie"
      description: "Dettaglio di una categoria"
      operationId: "getCategoria"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Categoria"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    put:
      tags:
      - "Tassonomie"
      description: "Aggiornamento di una categoria"
      operationId: "updateCategoria"
      requestBody:
          required: true      
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoriaUpdate"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Categoria"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /tassonomie/{id_tassonomia}/categorie/{id_categoria}/servizi:
    parameters:
      - $ref: "#/components/parameters/id_tassonomia"
      - $ref: "#/components/parameters/id_categoria"
    get:
      tags:
      - "Tassonomie"
      description: "Lista dei servizi associati a una categoria"
      operationId: "getServiziCategoria"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelItemServizio"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /tools/lista-risorse-api:
    post:
      tags:
      - "Tools"
      description: "Recupera la lista di azioni/risorse data una specifica"
      operationId: "listaRisorseApi"
      requestBody:
          required: true      
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaRisorseApiRichiesta"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiRisorse"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /tools/lista-operazioni-wsdl:
    post:
      tags:
      - "Tools"
      description: "Recupera la lista di azioni/risorse data una specifica"
      operationId: "listaOperazioniWsdl"
      requestBody:
          required: true      
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaRisorseApiRichiesta"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperazioniWsdl"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni:
    get:
      tags:
      - "Adesioni"
      description: "Elenco delle adesioni"
      operationId: "listAdesioni"
      parameters:
      - $ref: "#/components/parameters/stato_query_optional"
      - $ref: "#/components/parameters/id_soggetto_query_optional"
      - $ref: "#/components/parameters/id_organizzazione_query_optional"
      - $ref: "#/components/parameters/id_gruppo_padre_query_optional"
      - $ref: "#/components/parameters/id_dominio_query_optional"
      - $ref: "#/components/parameters/id_servizio_query_optional"
      - $ref: "#/components/parameters/id_logico_query_optional"
      - $ref: "#/components/parameters/id_adesione_query_optional"
      - $ref: "#/components/parameters/id_client_query_optional"
      - $ref: "#/components/parameters/richiedente_query_optional"
      - $ref: "#/components/parameters/in_attesa_query_optional"
      - $ref: "#/components/parameters/stato_configurazione_automatica_query_optional"
      - $ref: "#/components/parameters/q_query_optional"
      - $ref: "#/components/parameters/page_query_optional"
      - $ref: "#/components/parameters/size_query_optional"
      - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelItemAdesione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    post:
      tags:
      - "Adesioni"
      description: "Creazione di un'adesione"
      operationId: "createAdesione"
      requestBody:
        required: true      
        description: "Dati per la creazione dell'adesione"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdesioneCreate"
      responses:
        "201":
          description: "Operazione completata con successo"
          content: 
            application/json:
                schema:
                  $ref: "#/components/schemas/Adesione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/stato:
    parameters:
    - $ref: "#/components/parameters/stato_query_optional"
    - $ref: "#/components/parameters/id_soggetto_query_optional"
    - $ref: "#/components/parameters/id_organizzazione_query_optional"
    - $ref: "#/components/parameters/id_gruppo_padre_query_optional"
    - $ref: "#/components/parameters/id_dominio_query_optional"
    - $ref: "#/components/parameters/id_servizio_query_optional"
    - $ref: "#/components/parameters/id_logico_query_optional"
    - $ref: "#/components/parameters/id_client_query_optional"
    - $ref: "#/components/parameters/richiedente_query_optional"
    - $ref: "#/components/parameters/in_attesa_query_optional"
    - $ref: "#/components/parameters/ids_adesione_query_optional"
    - $ref: "#/components/parameters/q_query_optional"
    - $ref: "#/components/parameters/page_query_optional"
    - $ref: "#/components/parameters/size_query_optional"
    - $ref: "#/components/parameters/sort_query_optional"
    post:
      tags:
      - "Adesioni"
      description: "Aggiunta di uno stato all'iter di lavorazione delle adesioni, bulk operation"
      operationId: "updateStatoAdesioni"
      requestBody:
        required: true      
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StatoUpdate"
      responses:
        "201":
          description: "Operazione completata con successo"
          content: 
            application/json:
                schema:
                  $ref: "#/components/schemas/AdesioniCambioStatoResponse"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}:
    parameters:
    - $ref: "#/components/parameters/id_adesione"
    delete:
      tags:
      - "Adesioni"
      description: "Cancellazione di un'adesione"
      operationId: "deleteAdesione"
      responses:
        "200":
          description: "Adesione eliminata con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    get:
      tags:
      - "Adesioni"
      description: "Informazioni generali dell'adesione"
      operationId: "getAdesione"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Adesione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    put:
      tags:
      - "Adesioni"
      description: "Aggiornamento delle informazioni di identificativo dell'adesione"
      operationId: "updateAdesione"
      parameters:
       - $ref: "#/components/parameters/force_query_optional"
      requestBody:
        required: true      
        description: "Dati per l'aggiornamento delle informazioni identificativo dell'adesione"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdesioneUpdate"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Adesione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "404":
          $ref: "#/components/responses/404NotFound"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/check-dati/{stato}:
    parameters:
      - $ref: "#/components/parameters/id_adesione"
      - $ref: "#/components/parameters/stato"
    get:
      tags:
      - "Adesioni"
      description: "Check completezza dati per una determinata Adesione in un determinato stato"
      operationId: "checkDatiAdesione"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/CheckDati"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/grant:
    parameters:
      - $ref: "#/components/parameters/id_adesione"
    get:
      tags:
      - "Adesioni"
      description: "Grant che l'utente ha per una determinata Adesione"
      operationId: "getGrantAdesione"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                  $ref: "#/components/schemas/Grant"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/allegato/{id_allegato}/download:
    parameters:
      - $ref: "#/components/parameters/id_adesione"
      - $ref: "#/components/parameters/id_allegato"
    get:
      tags:
      - "Adesioni"
      description: "Download di un allegato per una determinata Adesione"
      operationId: "downloadAllegatoAdesione"
      responses:
        "200":
          description: File allegato
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/export:
    parameters:
    - $ref: "#/components/parameters/id_adesione"
    get:
      tags:
      - "Adesioni"
      description: "Download scheda adesione"
      operationId: "exportAdesione"
      responses:
        "200":
          description: File Allegato
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/referenti:
    parameters:
    - $ref: "#/components/parameters/id_adesione"
    get:
      tags:
      - "Adesioni"
      description: "Elenco dei referenti dell'adesione"
      operationId: "listReferentiAdesione"
      parameters:
      - $ref: "#/components/parameters/q_query_optional"
      - $ref: "#/components/parameters/tipo_referente_query_optional"
      - $ref: "#/components/parameters/page_query_optional"
      - $ref: "#/components/parameters/size_query_optional"
      - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelReferente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    post:
      tags:
      - "Adesioni"
      description: "Aggiunta di un referente all'adesione"
      operationId: "createReferenteAdesione"
      parameters:
       - $ref: "#/components/parameters/force_query_optional"
      requestBody:
        required: true      
        description: "Dati per l'aggiunta del referente all'adesione"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReferenteCreate"
      responses:
        "201":
          description: "Operazione completata con successo"
          content: 
            application/json:
                schema:
                  $ref: "#/components/schemas/Referente"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/referenti/{id_utente}:
    parameters:
    - $ref: "#/components/parameters/id_adesione"
    - $ref: "#/components/parameters/id_utente"
    - $ref: "#/components/parameters/tipo_referente_query_optional"
    delete:
      tags:
      - "Adesioni"
      description: "Rimozione di un referente dall'adesione"
      operationId: "deleteReferenteAdesione"
      parameters:
       - $ref: "#/components/parameters/force_query_optional"
      responses:
        "200":
          description: "Referente rimosso con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/messaggi:
    parameters:
    - $ref: "#/components/parameters/id_adesione"
    post:
      tags:
      - "Adesioni"
      description: "Aggiunta di un messaggio all'iter di lavorazione di un'adesione'"
      operationId: "createMessaggioAdesione"
      requestBody:
        description: "Dati del messaggio da aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MessaggioCreate"
        required: true
      responses:
        "201":
          description: "Operazione completata con successo"
          content: 
            application/json:
                schema:
                  $ref: "#/components/schemas/ItemMessaggio"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    get:
      tags:
      - "Adesioni"
      description: "Elenco dei messaggi presenti nell'iter di lavorazione di un servizio"
      operationId: "listMessaggiAdesione"
      parameters:
      - $ref: "#/components/parameters/q_query_optional"
      - $ref: "#/components/parameters/page_query_optional"
      - $ref: "#/components/parameters/size_query_optional"
      - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelItemMessaggio"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/messaggi/{id_messaggio}:
    parameters:
    - $ref: "#/components/parameters/id_adesione"
    - $ref: "#/components/parameters/id_messaggio"
    put:
      tags:
      - "Adesioni"
      description: "Aggiornamento di un messaggio all'iter di lavorazione di un'adesione'"
      operationId: "updateMessaggioAdesione"
      requestBody:
        description: "Dati del messaggio da aggiornare"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MessaggioUpdate"
        required: true
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemMessaggio"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "Adesioni"
      description: "Cancellazione di un messaggio presente nell'iter di lavorazione di un servizio"
      operationId: "deleteMessaggioAdesione"
      responses:
        "204":
          description: "Allegato eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/messaggi/{id_messaggio}/allegati/{id_allegato}/download:
    parameters:
    - $ref: "#/components/parameters/id_adesione"
    - $ref: "#/components/parameters/id_messaggio"
    - $ref: "#/components/parameters/id_allegato"
    get:
      tags:
        - "Adesioni"
      description: Download di un file allegato ad un messaggio relativo all'iter di lavorazione dell'adesione
      operationId: downloadAllegatoMessaggioAdesione
      responses:
        "200":
          description: File allegato
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/messaggi/{id_messaggio}/allegati:
    parameters:
    - $ref: "#/components/parameters/id_adesione"
    - $ref: "#/components/parameters/id_messaggio"
    post:
      tags:
      - "Adesioni"
      description: Creazione allegato ad un messaggio relativo ad una comunicazione dell'adesione
      operationId: createAllegatoMessaggioAdesione
      requestBody:
        description: "Dati dell'allegato da aggiungere"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AllegatoMessaggioCreate"
        required: true
      responses:
        "201":
          description: "Operazione completata con successo"
          content: 
            application/json:
                schema:
                  $ref: "#/components/schemas/AllegatoMessaggio"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/messaggi/{id_messaggio}/allegati/{id_allegato}:
    parameters:
    - $ref: "#/components/parameters/id_adesione"
    - $ref: "#/components/parameters/id_messaggio"
    - $ref: "#/components/parameters/id_allegato"
    delete:
      tags:
      - "Adesioni"
      description: "Eliminazione di un allegato dall'iter di lavorazione dell'adesione"
      operationId: "deleteAllegatoMessaggioAdesione"
      responses:
        "204":
          description: "Allegato eliminato con successo"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/stato:
    parameters:
    - $ref: "#/components/parameters/id_adesione"
    post:
      tags:
      - "Adesioni"
      description: "Aggiunta di uno stato all'iter di lavorazione dell'adesione"
      operationId: "updateStatoAdesione"
      parameters:
       - $ref: "#/components/parameters/check_only_query_optional"
      requestBody:
        required: true      
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StatoUpdate"
      responses:
        "201":
          description: "Operazione completata con successo"
          content: 
            application/json:
                schema:
                  $ref: "#/components/schemas/Adesione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "422":
          $ref: "#/components/responses/422UpdateEntitaComplessaSemanticamenteNonValida"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/comunicazioni:
    parameters:
    - $ref: "#/components/parameters/id_adesione"
    get:
      tags:
      - "Adesioni"
      description: "Elenco dei messaggi e degli step presenti nell'iter di lavorazione dell'adesione"
      operationId: "listComunicazioniAdesione"
      parameters:
        - $ref: "#/components/parameters/page_query_optional"
        - $ref: "#/components/parameters/size_query_optional"
        - $ref: "#/components/parameters/sort_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedModelItemComunicazione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/collaudo/client/{id_allegato}/download:
    parameters:
    - $ref: "#/components/parameters/id_adesione"
    - $ref: "#/components/parameters/id_allegato"
    get:
      tags:
      - "Adesioni"
      description: "Download documenti associati ai client collaudo"
      operationId: "downloadClientCollaudoAdesione"
      responses:
        "200":
          description: File allegato
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/produzione/client/{id_allegato}/download:
    parameters:
    - $ref: "#/components/parameters/id_adesione"
    - $ref: "#/components/parameters/id_allegato"
    get:
      tags:
      - "Adesioni"
      description: "Download documenti associati ai client produzione"
      operationId: "downloadClientCProduzioneAdesione"
      responses:
        "200":
          description: File allegato
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/produzione/configurazioni:
    parameters:
    - $ref: "#/components/parameters/id_adesione"
    get:
      tags:
      - "Adesioni"
      description: "Elenco delle configurazioni custom configurati in produzione per l'adesione"
      operationId: "listConfigurazioniProduzioneAdesione"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelItemConfigurazioneAdesione'
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    put:
      tags:
      - "Adesioni"
      description: "Salvataggio configurazione custom relativo all'adesione"
      operationId: "saveConfigurazioneCustomProduzioneAdesione"
      parameters:
       - $ref: "#/components/parameters/force_query_optional"
      requestBody:
        required: true      
        description: Dati di configurazione custom
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatiCustomAdesioneUpdate'
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Adesione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/collaudo/configurazioni:
    parameters:
    - $ref: "#/components/parameters/id_adesione"
    get:
      tags:
      - "Adesioni"
      description: "Elenco delle configurazioni custom configurati in collaudo per l'adesione"
      operationId: "listConfigurazioniCollaudoAdesione"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelItemConfigurazioneAdesione'
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    put:
      tags:
      - "Adesioni"
      description: "Salvataggio configurazione custom relativo all'adesione"
      operationId: "saveConfigurazioneCustomCollaudoAdesione"
      parameters:
       - $ref: "#/components/parameters/force_query_optional"
      requestBody:
        required: true      
        description: Dati di configurazione custom
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatiCustomAdesioneUpdate'
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Adesione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/collaudo/client:
    parameters:
    - $ref: "#/components/parameters/id_adesione"
    get:
      tags:
      - "Adesioni"
      description: "Elenco dei clients configurati in collaudo per l'adesione"
      operationId: "listClientCollaudoAdesione"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelItemClientAdesione'
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/collaudo/client/{profilo}:
    parameters:
    - $ref: "#/components/parameters/id_adesione"
    - $ref: "#/components/parameters/profilo"
    put:
      tags:
      - "Adesioni"
      description: "Configurazione di un client relativo all'adesione"
      operationId: "saveClientCollaudoAdesione"
      parameters:
       - $ref: "#/components/parameters/force_query_optional"
      requestBody:
        required: true      
        description: Dati di configurazione del client
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdesioneClientUpdate'
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Adesione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "Adesioni"
      description: "Configurazione di un client relativo all'adesione"
      operationId: "deleteClientCollaudoAdesione"
      parameters:
       - $ref: "#/components/parameters/force_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Adesione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/produzione/client:
    parameters:
    - $ref: "#/components/parameters/id_adesione"
    get:
      tags:
      - "Adesioni"
      description: "Elenco dei clients configurati in produzione per l'adesione"
      operationId: "listClientProduzioneAdesione"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelItemClientAdesione'
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/produzione/client/{profilo}:
    parameters:
    - $ref: "#/components/parameters/id_adesione"
    - $ref: "#/components/parameters/profilo"
    put:
      tags:
      - "Adesioni"
      description: "Configurazione di un client relativo all'adesione"
      operationId: "saveClientProduzioneAdesione"
      parameters:
       - $ref: "#/components/parameters/force_query_optional"
      requestBody:
        required: true      
        description: Dati di configurazione del client
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdesioneClientUpdate'
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Adesione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "Adesioni"
      description: "Configurazione di un client relativo all'adesione"
      operationId: "deleteClientProduzioneAdesione"
      parameters:
       - $ref: "#/components/parameters/force_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Adesione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/collaudo/erogazioni:
    parameters:
    - $ref: "#/components/parameters/id_adesione"
    get:
      tags:
      - "Adesioni"
      description: "Elenco degli endpoint di erogazione richiesti dall'adesione in collaudo"
      operationId: "listErogazioniCollaudoAdesione"
      responses:
        "200":
          description: Operazione completata con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelItemErogazioneAdesione'
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/produzione/erogazioni:
    parameters:
    - $ref: "#/components/parameters/id_adesione"
    get:
      tags:
      - "Adesioni"
      description: "Elenco degli endpoint di erogazione richiesti dall'adesione in produzione"
      operationId: "listErogazioniProduzioneAdesione"
      responses:
        "200":
          description: Operazione completata con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedModelItemErogazioneAdesione'
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/collaudo/erogazioni/{id_erogazione}:
    parameters:
    - $ref: "#/components/parameters/id_adesione"
    - $ref: "#/components/parameters/id_erogazione"
    put:
      tags:
      - "Adesioni"
      description: "Configurazione di un endpoint di erogazione relativo all'adesione in collaudo"
      operationId: "saveErogazioneCollaudoAdesione"
      parameters:
       - $ref: "#/components/parameters/force_query_optional"
      requestBody:
        required: true      
        description: Dati di configurazione dell'endpoint di erogazione
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdesioneErogazioneUpdate'
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Adesione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "Adesioni"
      description: "Configurazione di un endpoint di erogazione relativo all'adesione in collaudo"
      operationId: "deleteErogazioneCollaudoAdesione"
      parameters:
       - $ref: "#/components/parameters/force_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Adesione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
  /adesioni/{id_adesione}/produzione/erogazioni/{id_erogazione}:
    parameters:
    - $ref: "#/components/parameters/id_adesione"
    - $ref: "#/components/parameters/id_erogazione"
    put:
      tags:
      - "Adesioni"
      description: "Configurazione di un endpoint di erogazione relativo all'adesione in produzione"
      operationId: "saveErogazioneProduzioneAdesione"
      parameters:
       - $ref: "#/components/parameters/force_query_optional"
      requestBody:
        required: true      
        description: Dati di configurazione dell'endpoint di erogazione
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdesioneErogazioneUpdate'
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Adesione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
    delete:
      tags:
      - "Adesioni"
      description: "Configurazione di un endpoint di erogazione relativo all'adesione in produzione"
      operationId: "deleteErogazioneProduzioneAdesione"
      parameters:
       - $ref: "#/components/parameters/force_query_optional"
      responses:
        "200":
          description: "Operazione completata con successo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Adesione"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401Unauthorized"
        "403":
          $ref: "#/components/responses/403Forbidden"
        "404":
          $ref: "#/components/responses/404NotFound"
        "409":
          $ref: "#/components/responses/409Conflict"
        "429":
          $ref: "#/components/responses/429TooManyRequests"
        "503":
          $ref: "#/components/responses/503ServiceUnavailable"
        "default":
          $ref: "#/components/responses/default"
components:
  schemas:
    AmbienteEnum:
      type: "string"
      enum:
        - "collaudo"
        - "produzione"
    APICreate:
      type: "object"
      required:
        - nome
        - versione
        - id_servizio
        - ruolo
        - protocollo
      properties:
        nome:
          $ref: "#/components/schemas/String255"
        versione:
          type: "integer"
          format: "int32"
        id_servizio:
          $ref: "#/components/schemas/IdServizio"
        ruolo:
          $ref: "#/components/schemas/RuoloAPIEnum"
        gruppi_auth_type:
          $ref: "#/components/schemas/AuthTypeList"
        configurazione_collaudo:
          $ref: "#/components/schemas/APIDatiAmbienteCreate"
        configurazione_produzione:
          $ref: "#/components/schemas/APIDatiAmbienteCreate"
        descrizione:
          $ref: "#/components/schemas/String255"
        codice_asset:
          $ref: "#/components/schemas/String255"
        proprieta_custom:
          type: array
          items:
            $ref: "#/components/schemas/ProprietaCustom"
        url_invocazione:
          $ref: "#/components/schemas/String255"
    APIDatiAmbiente:
      type: "object"
      required:
        - url_prefix
      properties:
        protocollo:
          $ref: "#/components/schemas/ProtocolloEnum"
        protocollo_dettaglio:
          $ref: "#/components/schemas/ProtocolloDettaglioEnum"
        specifica:
          $ref: "#/components/schemas/Documento"
        dati_erogazione:
          $ref: "#/components/schemas/APIDatiErogazione"
    APIDatiAmbienteCreate:
      type: "object"
      required:
        - url_prefix
      properties:
        protocollo:
          $ref: "#/components/schemas/ProtocolloEnum"
        specifica:
          $ref: "#/components/schemas/DocumentoCreate"
        dati_erogazione:
          $ref: "#/components/schemas/APIDatiErogazione"
    APIDatiAmbienteUpdate:
      type: "object"
      properties:
        protocollo:
          $ref: "#/components/schemas/ProtocolloEnum"
        specifica:
          $ref: "#/components/schemas/DocumentoUpdate"
        dati_erogazione:
          $ref: "#/components/schemas/APIDatiErogazione"
    APIDatiErogazione:
      type: "object"
      required:
        - gruppi_auth_type
      properties:
        url:
          $ref: "#/components/schemas/String255"
        url_prefix:
          $ref: "#/components/schemas/String255"
        nome_gateway:
          $ref: "#/components/schemas/String255"
        versione_gateway:
          type: "integer"
          format: "int32"
    AuthTypeList:
      type: array
      items:
        $ref: "#/components/schemas/AuthTypeApiResource"
    ProprietaCustom:
      type: object
      required:
        - gruppo
        - proprieta
      properties:
        gruppo:
          $ref: "#/components/schemas/String255"
        proprieta:
          type: array
          items:
            $ref: "#/components/schemas/AuthTypeApiResourceProprietaCustom"
    ProprietaCustomAdesione:
      type: object
      required:
        - gruppi
      properties:
        api:
          $ref: "#/components/schemas/IdApi"
        gruppi:
          type: array
          items:
            $ref: "#/components/schemas/ProprietaCustom"
    AuthTypeApiResourceProprietaCustom:
      type: object
      required:
        - nome
      properties:
        nome:
          $ref: "#/components/schemas/String255"
        valore:
          $ref: "#/components/schemas/String255"
        content:
          $ref: "#/components/schemas/Base64String"
        filename:
          $ref: "#/components/schemas/String255"
        content_type:
          $ref: "#/components/schemas/String255"
        uuid:
          $ref: "#/components/schemas/String255"
    AuthTypeApiResource:
      type: object
      required:
        - profilo
        - resources
      properties:
        resources:
          $ref: "#/components/schemas/ApiRisorse"
        profilo:
          $ref: "#/components/schemas/String255"
        note:
          $ref: "#/components/schemas/String255"
    ConfigurazioneCompatibilitaApiEnum:
      type: "string"
      description: "Compatibilita API"
      example: "soap"
      enum:
        - soap
        - rest
    ConfigurazioneTipoDominioEnum:
      type: "string"
      description: "Dominio interno/ esterno"
      example: "interno"
      enum:
        - interno
        - esterno
    AuthTypeEnum:
      type: "string"
      description: "I tipi di autenticazione supportati da una api"
      example: "http_basic"
      enum:
        - http_basic
        - pdnd
        - https
        - sign
        - https_sign
        - https_pdnd
        - sign_pdnd
        - https_pdnd_sign
        - oauth_client_credentials
        - oauth_authorization_code
        - indirizzo_ip
        - no_dati
    RuoloAPIEnum:
      type: "string"
      example: "erogato_soggetto_dominio"
      enum:
      - "erogato_soggetto_dominio"
      - "erogato_soggetto_aderente"
    ProtocolloEnum:
      type: "string"
      example: "soap"
      enum:
      - "soap"
      - "rest"
    ProtocolloDettaglioEnum:
      type: "string"
      example: "wsdl_11"
      enum:
      - "wsdl_11"
      - "wsdl_12"
      - "swagger_2"
      - "openapi_3"
    TipoApiRisorsaEnum:
      type: string
      enum: ['inline', 'uuid' ]
      example: 'uuid'
    ListaRisorseApiRichiesta:
      type: object
      required:
        - api_type
      properties:
        api_type:
          $ref: '#/components/schemas/ProtocolloEnum'
        document:
            $ref: '#/components/schemas/DocumentoApi'
    DocumentoApi:
      type: object
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/TipoApiRisorsaEnum'
      discriminator:
        propertyName: type
        mapping:
          'inline':  '#/components/schemas/DocumentoApiInline'
          'uuid':   '#/components/schemas/DocumentoApiRef'
    DocumentoApiInline:
      allOf:
      - $ref: '#/components/schemas/DocumentoApi'
      - type: object
        properties:
          content_type:
            $ref: '#/components/schemas/String255'
          document:
            $ref: "#/components/schemas/Base64String"
    DocumentoApiRef:     
      allOf:
      - $ref: '#/components/schemas/DocumentoApi'
      - type: object
        properties:
          uuid:
            $ref: '#/components/schemas/String255'
    ApiRisorse:
      type: array
      items:
        $ref: '#/components/schemas/String255'
    OperazioniWsdl:
      type: array
      items:
        $ref: "#/components/schemas/ServizioWsdl"
    ServizioWsdl:
      type: object
      properties:
        port_type:
          $ref: "#/components/schemas/String255"
        operations:
          type: array
          items:
            $ref: "#/components/schemas/OperazioneWsdl"
    MessaggioType:
      type: string
      enum:
        - input
        - input_output
    OperazioneWsdl:
      type: object
      properties:
        nome:
          $ref: "#/components/schemas/String255"
        soap_action:
          $ref: "#/components/schemas/String255"
        messaggio:
          $ref: "#/components/schemas/MessaggioType"
    ApiUpdate:
      type: "object"
      properties:
        identificativo:
          $ref: "#/components/schemas/IdentificativoApiUpdate"
        dati_generici:
          $ref: "#/components/schemas/DatiGenericiApiUpdate"
        dati_specifica:
          $ref: "#/components/schemas/DatiSpecificaApiUpdate"
        dati_custom:
          $ref: "#/components/schemas/DatiCustomUpdate"
        configurazione_collaudo:
          $ref: "#/components/schemas/APIDatiAmbienteUpdate"
        configurazione_produzione:
          $ref: "#/components/schemas/APIDatiAmbienteUpdate"
    IdentificativoApiUpdate:
      type: "object"
      required:
        - nome
        - ruolo
        - versione
      properties:
        nome:
          $ref: "#/components/schemas/String255"
        versione:
          type: "integer"
          format: "int32"
        ruolo:
          $ref: "#/components/schemas/RuoloAPIEnum"
    DatiGenericiApiUpdate:
      type: "object"
      properties:
        descrizione:
          $ref: "#/components/schemas/String255"
        codice_asset:
          $ref: "#/components/schemas/String255"
        url_invocazione:
          $ref: "#/components/schemas/String255"
    DatiCustomUpdate:
      type: "object"
      properties:
        proprieta_custom:
          type: array
          items:
            $ref: "#/components/schemas/ProprietaCustom"
    DatiCustomAdesioneUpdate:
      type: "object"
      properties:
        proprieta_custom:
          type: array
          items:
            $ref: "#/components/schemas/ProprietaCustomAdesione"
    DatiSpecificaApiUpdate:
      type: "object"
      required:
        - protocollo
      properties:
        gruppi_auth_type:
          $ref: "#/components/schemas/AuthTypeList"
    ItemApi:
      type: "object"
      required:
      - "id_api"
      - "nome"
      - "versione"
      - "ruolo"
      properties:
        id_api:
          $ref: "#/components/schemas/IdApi"
        nome:
          $ref: "#/components/schemas/String255"
        versione:
          type: "integer"
          format: "int32"
        servizio:
          $ref: "#/components/schemas/ItemServizio"
        descrizione:
          $ref: "#/components/schemas/String255"
        codice_asset:
          $ref: "#/components/schemas/String255"
        ruolo:
          $ref: "#/components/schemas/RuoloAPIEnum"
        protocollo:
          $ref: "#/components/schemas/ProtocolloEnum"
        protocollo_dettaglio:
          $ref: "#/components/schemas/ProtocolloDettaglioEnum"
        gruppi_auth_type:
          $ref: "#/components/schemas/AuthTypeList"
        configurazione_collaudo:
          $ref: "#/components/schemas/APIDatiAmbiente"
        configurazione_produzione:
          $ref: "#/components/schemas/APIDatiAmbiente"
        proprieta_custom:
          type: array
          items:
            $ref: "#/components/schemas/ProprietaCustom"
        url_invocazione:
          $ref: "#/components/schemas/String255"
    API:
      type: "object"
      required:
        - id_api
        - nome
        - versione
        - ruolo
        - protocollo
      properties:
        id_api:
          $ref: "#/components/schemas/IdApi"
        nome:
          $ref: "#/components/schemas/String255"
        versione:
          type: "integer"
          format: "int32"
        servizio:
          $ref: "#/components/schemas/ItemServizio"
        ruolo:
          $ref: "#/components/schemas/RuoloAPIEnum"
        gruppi_auth_type:
          $ref: "#/components/schemas/AuthTypeList"
        configurazione_collaudo:
          $ref: "#/components/schemas/APIDatiAmbiente"
        configurazione_produzione:
          $ref: "#/components/schemas/APIDatiAmbiente"
        descrizione:
          $ref: "#/components/schemas/String255"
        codice_asset:
          $ref: "#/components/schemas/String255"
        proprieta_custom:
          type: array
          items:
            $ref: "#/components/schemas/ProprietaCustom"
        url_invocazione:
          $ref: "#/components/schemas/String255"
    Configurazione:
      type: "object"
      required:
        - generale
        - dashboard
        - organizzazione
        - soggetto
        - pdnd
        - dominio
        - gruppo
        - utente
        - servizio
        - adesione
      properties:
        generale:
          $ref: '#/components/schemas/ConfigurazioneGenerale'
        amministrazione:
          $ref: '#/components/schemas/ConfigurazioneAmministrazione'
        dashboard:
          $ref: '#/components/schemas/ConfigurazioneDashboard'
        organizzazione:
          $ref: '#/components/schemas/ConfigurazioneOrganizzazione'
        soggetto:
          $ref: '#/components/schemas/ConfigurazioneSoggetto'
        pdnd:
          $ref: '#/components/schemas/ConfigurazionePdnd'
        dominio:
          $ref: '#/components/schemas/ConfigurazioneDominio'
        gruppo:
          $ref: '#/components/schemas/ConfigurazioneGruppo'
        utente:
          $ref: '#/components/schemas/ConfigurazioneUtente'
        servizio:
          $ref: '#/components/schemas/ConfigurazioneServizio'
        package:
          $ref: '#/components/schemas/ConfigurazionePackage'
        adesione:
          $ref: '#/components/schemas/ConfigurazioneAdesione'
        monitoraggio:
          $ref: '#/components/schemas/ConfigurazioneMonitoraggio'
    WorkflowProduzioneSenzaCollaudoEnum:
      type: "string"
      enum:
        - abilitato
        - disabilitato
        - link_altra_adesione
    ConfigurazionePdnd:
      type: "array"
      items:
        type: "object"
        required:
          - nome_soggetto
          - collaudo
          - produzione
        properties:
          nome_soggetto:
            type: "string"
          collaudo:
            $ref: '#/components/schemas/ConfigurazioneSoggettoPdnd'
          produzione:
            $ref: '#/components/schemas/ConfigurazioneSoggettoPdnd'
    ConfigurazioneSoggettoPdnd:
      type: "object"
      required:
        - nome_soggetto
        - id_producer
      properties:
        id_producer:
          type: "string"
          format: "uuid"
        lista_policy:
          type: array
          items:
            type: string
    ConfigurazioneSoggettoMonitoraggio:
      type: "object"
      required:
        - nome
        - tipo_soggetto_govway
      properties:
        nome:
          type: string
        tipo_soggetto_govway:
          type: string
    ConfigurazioneMonitoraggio:
      type: "object"
      required:
        - abilitato
        - ruoli_abilitati
        - limitata
        - profilo_govway_default
      properties:
        abilitato:
          type: "boolean"
        verifiche_abilitate:
          type: "boolean"
        statistiche_abilitate:
          type: "boolean"
        transazioni_abilitate:
          type: "boolean"
        ruoli_abilitati:
          type: "array"
          items:
            $ref: '#/components/schemas/ConfigurazioneRuolo'
        limitata:
          type: "boolean"
        profilo_govway_default:
          type: "string"
        soggetto_modi:
            $ref: '#/components/schemas/ConfigurazioneSoggettoMonitoraggio'
        soggetto_pdnd:
            $ref: '#/components/schemas/ConfigurazioneSoggettoMonitoraggio'
    ConfigurazioneAdesione:
      type: "object"
      required:
        - scelta_libera_organizzazione
        - riuso_client_obbligatorio
        - referente_obbligatorio
        - workflow_produzione_senza_collaudo
        - stati_scheda_adesione
      properties:
        visualizza_elenco_client_esistenti:
          type: "boolean"
        scelta_libera_organizzazione:
          type: "boolean"
        riuso_client_obbligatorio:
          type: "boolean"
        referente_obbligatorio:
          type: "boolean"
        workflow_produzione_senza_collaudo:
          $ref: '#/components/schemas/WorkflowProduzioneSenzaCollaudoEnum'
        workflow:
          $ref: '#/components/schemas/ConfigurazioneWorkflow'
        configurazione_automatica:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurazioneAutomatica'
        stati_scheda_adesione:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurazioneNomeStato'
        proprieta_custom:
          type: array
          items:
            $ref: "#/components/schemas/ConfigurazioneCustomAdesioneProprietaList"
    ConfigurazioneProfilo:
      type: "object"
      required:
      - codice_interno
      - etichetta
      - auth_type
      properties:
        codice_interno:
          $ref: "#/components/schemas/String255"
        etichetta:
          $ref: "#/components/schemas/String255"
        auth_type:
          $ref: "#/components/schemas/AuthTypeEnum"
        compatibilita:
          $ref: "#/components/schemas/ConfigurazioneCompatibilitaApiEnum"
        canale_default:
          $ref: "#/components/schemas/String255"
        profilo_govway:
          type: "string"
        tipo_dominio:
          $ref: "#/components/schemas/ConfigurazioneTipoDominioEnum"
        domini:
          type: array
          items:
            type: "string"
        soggetti:
          type: array
          items:
            type: "string"
        codice_token_policy:
          type: "string"
    TipoConfigurazioneCustomProprieta:
      type: "string"
      enum:
        - text
        - select
        - file
    ConfigurazioneCustomProprietaList:
      type: "object"
      required:
        - nome_gruppo
        - label_gruppo
        - classe_dato
        - proprieta
      properties:
        nome_gruppo:
          $ref: "#/components/schemas/String255"
        id_correlazione:
          $ref: "#/components/schemas/String255"
        label_gruppo:
          $ref: "#/components/schemas/String255"
        classe_dato:
          $ref: "#/components/schemas/ConfigurazioneClasseDato"
        auth_type:
          type: array
          items:
            $ref: "#/components/schemas/AuthTypeEnum"
        profili:
          type: array
          items:
            $ref: "#/components/schemas/String255"
        ruoli_abilitati:
          type: array
          items:
            $ref: "#/components/schemas/Ruolo"
        proprieta:
          type: array
          items:
            $ref: "#/components/schemas/ConfigurazioneCustomProprieta"
    ConfigurazioneCustomAdesioneProprietaList:
      type: "object"
      required:
        - nome_gruppo
        - label_gruppo
        - classe_dato
        - proprieta
      properties:
        nome_gruppo:
          $ref: "#/components/schemas/String255"
        label_gruppo:
          $ref: "#/components/schemas/String255"
        classe_dato:
          $ref: "#/components/schemas/ConfigurazioneClasseDato"
        specifico_per:
          $ref: "#/components/schemas/SpecificoPer"
        auth_type:
          type: array
          items:
            $ref: "#/components/schemas/AuthTypeEnum"
        profili:
          type: array
          items:
            type: "string"
        ruoli_abilitati:
          type: array
          items:
            $ref: "#/components/schemas/Ruolo"
        proprieta:
          type: array
          items:
            $ref: "#/components/schemas/ConfigurazioneCustomProprieta"
    SpecificoPer:
      type: "string"
      enum:
       - adesione
       - api
       - api_soggetto_dominio
       - api_soggetto_aderente
      default: adesione
    ConfigurazioneCustomProprietaVetrina:
      type: "object"
      required:
        - label
        - template
      properties:
        label:
          $ref: "#/components/schemas/String255"
        template:
          $ref: "#/components/schemas/String255"
    ConfigurazioneCustomProprieta:
      type: "object"
      required:
        - nome
        - etichetta
        - tipo
        - required
      properties:
        nome:
          $ref: "#/components/schemas/String255"
        etichetta:
          $ref: "#/components/schemas/String255"
        tipo:
          $ref: "#/components/schemas/TipoConfigurazioneCustomProprieta"
        vetrina:
          $ref: "#/components/schemas/ConfigurazioneCustomProprietaVetrina"
        required:
          type: boolean
      discriminator:
        propertyName: "tipo"
        mapping:
          text: "#/components/schemas/ConfigurazioneProfiloCustomProprietaText"
          select: "#/components/schemas/ConfigurazioneProfiloCustomProprietaSelect"
          file: "#/components/schemas/ConfigurazioneProfiloCustomProprietaFile"
    ConfigurazioneProfiloCustomProprietaText:
      allOf:
        - $ref: '#/components/schemas/ConfigurazioneCustomProprieta'
        - type: object
          properties:
            regular_expression:
              $ref: "#/components/schemas/String255"
    ConfigurazioneProfiloCustomProprietaSelect:
      allOf:
        - $ref: '#/components/schemas/ConfigurazioneCustomProprieta'
        - type: object
          required:
            - valori
          properties:
            valori:
              type: array
              items:
                $ref: '#/components/schemas/ValoriConfigurazioneProfiloCustomProprietaSelect'
    ConfigurazioneProfiloCustomProprietaFile:
      allOf:
        - $ref: '#/components/schemas/ConfigurazioneCustomProprieta'
    ValoriConfigurazioneProfiloCustomProprietaSelect:
      type: "object"
      required:
        - nome
        - etichetta
      properties:
        nome:
          $ref: "#/components/schemas/String255"
        etichetta:
          $ref: "#/components/schemas/String255"
        default:
          type: boolean
    ConfigurazioneCertificato:
      type: "object"
      required:
        - file
        - cn
        - csr
        - csr_modulo
      properties:
        file:
          type: boolean
        cn:
          type: boolean
        csr:
          type: boolean
        csr_modulo:
          type: boolean
    ConfigurazioneAuthTypeHttpBasic:
      allOf:
        - $ref: '#/components/schemas/ConfigurazioneAuthType'
        - type: object
          required:
            - indirizzi_ip
          properties:
            indirizzi_ip:
              type: boolean
    ConfigurazioneAuthTypeOAuthClientCredentials:
      allOf:
        - $ref: '#/components/schemas/ConfigurazioneAuthType'
        - type: object
          required:
            - indirizzi_ip
          properties:
            indirizzi_ip:
              type: boolean
    ConfigurazioneAuthTypeOAuthAuthorizationCode:
      allOf:
        - $ref: '#/components/schemas/ConfigurazioneAuthType'
        - type: object
          required:
            - indirizzi_ip
          properties:
            indirizzi_ip:
              type: boolean
    ConfigurazioneAuthTypeIndirizzoIp:
      allOf:
        - $ref: '#/components/schemas/ConfigurazioneAuthType'
    ConfigurazioneAuthTypeNoDati:
      allOf:
        - $ref: '#/components/schemas/ConfigurazioneAuthType'
    ConfigurazioneAuthTypeHttps:
      allOf:
        - $ref: '#/components/schemas/ConfigurazioneAuthType'
        - type: object
          required:
            - certificato
            - indirizzi_ip
          properties:
            certificato:
              $ref: "#/components/schemas/ConfigurazioneCertificato"
            indirizzi_ip:
              type: boolean
    ConfigurazioneAuthTypeHttpsPdnd:
      allOf:
        - $ref: '#/components/schemas/ConfigurazioneAuthType'
        - type: object
          required:
            - certificato
            - indirizzi_ip
          properties:
            certificato:
              $ref: "#/components/schemas/ConfigurazioneCertificato"
            indirizzi_ip:
              type: boolean
    ConfigurazioneAuthTypePdnd:
      allOf:
        - $ref: '#/components/schemas/ConfigurazioneAuthType'
        - type: object
          required:
            - indirizzi_ip
          properties:
            indirizzi_ip:
              type: boolean
    ConfigurazioneAuthTypeSign:
      allOf:
        - $ref: '#/components/schemas/ConfigurazioneAuthType'
        - type: object
          required:
            - certificato_firma
            - indirizzi_ip
          properties:
            certificato_firma:
              $ref: "#/components/schemas/ConfigurazioneCertificato"
            indirizzi_ip:
              type: boolean
    ConfigurazioneAuthTypeHttpsSign:
      allOf:
        - $ref: '#/components/schemas/ConfigurazioneAuthType'
        - type: object
          required:
            - certificato_autenticazione
            - certificato_firma
            - indirizzi_ip
          properties:
            certificato_autenticazione:
              $ref: "#/components/schemas/ConfigurazioneCertificato"
            certificato_firma:
              $ref: "#/components/schemas/ConfigurazioneCertificato"
            indirizzi_ip:
              type: boolean
    ConfigurazioneAuthTypeHttpsPdndSign:
      allOf:
        - $ref: '#/components/schemas/ConfigurazioneAuthType'
        - type: object
          required:
            - certificato_autenticazione
            - certificato_firma
            - indirizzi_ip
          properties:
            certificato_autenticazione:
              $ref: "#/components/schemas/ConfigurazioneCertificato"
            certificato_firma:
              $ref: "#/components/schemas/ConfigurazioneCertificato"
            indirizzi_ip:
              type: boolean
    ConfigurazioneAuthTypeSignPdnd:
      allOf:
        - $ref: '#/components/schemas/ConfigurazioneAuthType'
        - type: object
          required:
            - certificato_firma
            - indirizzi_ip
          properties:
            certificato_firma:
              $ref: "#/components/schemas/ConfigurazioneCertificato"
            indirizzi_ip:
              type: boolean
    ConfigurazioneAuthType:
      type: "object"
      required:
        - type
      properties:
        type:
          $ref: "#/components/schemas/AuthTypeEnum"
        rate_limiting:
              type: boolean
        finalita:
              type: boolean
      discriminator:
        propertyName: "type"
        mapping:
          http_basic: "#/components/schemas/ConfigurazioneAuthTypeHttpBasic"
          https: "#/components/schemas/ConfigurazioneAuthTypeHttps"
          sign: "#/components/schemas/ConfigurazioneAuthTypeSign"
          pdnd: "#/components/schemas/ConfigurazioneAuthTypePdnd"
          https_sign: "#/components/schemas/ConfigurazioneAuthTypeHttpsSign"
          https_pdnd: "#/components/schemas/ConfigurazioneAuthTypeHttpsPdnd"
          sign_pdnd: "#/components/schemas/ConfigurazioneAuthTypeSignPdnd"
          https_pdnd_sign: "#/components/schemas/ConfigurazioneAuthTypeHttpsPdndSign"
          oauth_client_credentials: "#/components/schemas/ConfigurazioneAuthTypeOAuthClientCredentials"
          oauth_authorization_code: "#/components/schemas/ConfigurazioneAuthTypeOAuthAuthorizationCode"
          indirizzo_ip: "#/components/schemas/ConfigurazioneAuthTypeIndirizzoIp"
          no_dati: "#/components/schemas/ConfigurazioneAuthTypeNoDati"
    ConfigurazioneApi:
      type: "object"
      required:
        - specifica_obbligatorio
        - codice_asset_obbligatorio
        - transazioni
        - profili
        - proprieta_custom
      properties:
        abilitato:
          type: "boolean"
        etichetta:
          type: "string"
        specifica_obbligatorio:
          type: "boolean"
        swagger_2_consentito:
          type: "boolean"
        codice_asset_obbligatorio:
          type: "boolean"
        info_gateway_visualizzate:
          type: "boolean"
        transazioni:
          type: "boolean"
        auth_type:
          type: "array"
          items:
            $ref: "#/components/schemas/ConfigurazioneAuthType"
        profili:
          type: "array"
          items:
            $ref: "#/components/schemas/ConfigurazioneProfilo"
        token_policies:
          type: "array"
          items:
            $ref: "#/components/schemas/ConfigurazioneTokenPolicy"
        proprieta_custom:
          type: array
          items:
            $ref: "#/components/schemas/ConfigurazioneCustomProprietaList"
    ConfigurazioneTipoPolicyEnum:
      type: "string"
      enum:
        - code_grant
        - client_credentials
        - pdnd
        - pdnd_audit
        - pdnd_integrity
        - pdnd_audit_integrity
    ConfigurazioneTokenPolicy:
      type: "object"
      required:
        - codice_profilo
        - tipo_policy
        - url_collaudo
      properties:
        tipo_policy:
          $ref: '#/components/schemas/ConfigurazioneTipoPolicyEnum'
        token_url:
          $ref: '#/components/schemas/String255'
        codice_policy:
          $ref: '#/components/schemas/String255'
      discriminator:
        propertyName: "tipo_policy"
        mapping:
          code_grant: "#/components/schemas/ConfigurazioneTokenPolicyCodeGrant"
          client_credentials: "#/components/schemas/ConfigurazioneTokenPolicyClientCredentials"
          pdnd: "#/components/schemas/ConfigurazioneTokenPolicyPdnd"
          pdnd_audit: "#/components/schemas/ConfigurazioneTokenPolicyPdndAudit"
          pdnd_integrity: "#/components/schemas/ConfigurazioneTokenPolicyPdndIntegrity"
          pdnd_audit_integrity: "#/components/schemas/ConfigurazioneTokenPolicyPdndAuditIntegrity"
    ConfigurazioneTokenPolicyClientCredentials:
      allOf:
        - $ref: '#/components/schemas/ConfigurazioneTokenPolicy'
        - type: "object"
          properties:
            scope:
              $ref: '#/components/schemas/String255'
    ConfigurazioneTokenPolicyCodeGrant:
      allOf:
        - $ref: '#/components/schemas/ConfigurazioneTokenPolicy'
        - type: "object"
          required:
            - auth_url
          properties:
            auth_url:
              $ref: '#/components/schemas/String255'
            scope:
              $ref: '#/components/schemas/String255'
    ConfigurazioneTokenPolicyPdnd:
      allOf:
        - $ref: '#/components/schemas/ConfigurazioneTokenPolicy'
        - type: "object"
          required:
            - alg_options
            - alg_default
            - typ
            - audience
            - scadenza
          properties:
            alg_options:
              type: array
              items:
                $ref: '#/components/schemas/String255'
            alg_default:
              $ref: '#/components/schemas/String255'
            type:
              $ref: '#/components/schemas/String255'
            audience:
              $ref: '#/components/schemas/String255'
            expires_in:
              type: integer
              format: int32
    ConfigurazioneTokenPolicyPdndAudit:
      allOf:
        - $ref: '#/components/schemas/ConfigurazioneTokenPolicyPdnd'
        - type: "object"
          required:
            - audience_audit
          properties:
            audience_audit:
              $ref: '#/components/schemas/String255'
    ConfigurazioneTokenPolicyPdndIntegrity:
      allOf:
        - $ref: '#/components/schemas/ConfigurazioneTokenPolicyPdnd'
        - type: "object"
          required:
            - audience_integrity
          properties:
            audience_integrity:
              $ref: '#/components/schemas/String255'
    ConfigurazioneTokenPolicyPdndAuditIntegrity:
      allOf:
        - $ref: '#/components/schemas/ConfigurazioneTokenPolicyPdnd'
        - type: "object"
          required:
            - audience_audit
            - audience_integrity
          properties:
            audience_audit:
              $ref: '#/components/schemas/String255'
            audience_integrity:
              $ref: '#/components/schemas/String255'
    ConfigurazionePackage:
      type: "object"
      required:
        - workflow
      properties:
        workflow:
          $ref: '#/components/schemas/ConfigurazioneWorkflow'
        stati_adesione_consentita:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurazioneNomeStato'
    ConfigurazioneGenerico:
      type: "object"
      required:
        - auth_type
        - profili
        - proprieta_custom
      properties:
        abilitato:
          type: "boolean"
        etichetta:
          type: "string"
        auth_type:
          type: "array"
          items:
            $ref: "#/components/schemas/ConfigurazioneAuthType"
        profili:
          type: "array"
          items:
            $ref: "#/components/schemas/ConfigurazioneProfilo"
        proprieta_custom:
          type: array
          items:
            $ref: "#/components/schemas/ConfigurazioneCustomProprietaList"
    ConfigurazioneServizio:
      type: "object"
      required:
        - api_multiple
        - adesioni_multiple
        - tassonomie_abilitate
        - api
        - workflow
        - stati_adesione_consentita
        - monitoraggio
        - visibilita_allegati_consentite
      properties:
        api_multiple:
          type: "boolean"
        consenti_non_sottoscrivibile:
          type: "boolean"
        adesioni_multiple:
          type: "boolean"
        tassonomie_abilitate:
          type: "boolean"
        api:
          $ref: '#/components/schemas/ConfigurazioneApi'
        generico:
          $ref: '#/components/schemas/ConfigurazioneGenerico'
        workflow:
          $ref: '#/components/schemas/ConfigurazioneWorkflow'
        stati_adesione_consentita:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurazioneNomeStato'
        monitoraggio:
          $ref: '#/components/schemas/ConfigurazioneMonitoraggio'
        visibilita_allegati_consentite:
          type: array
          items:
            $ref: "#/components/schemas/VisibilitaAllegatoEnum"
    ConfigurazioneNomeStato:
      $ref: "#/components/schemas/String255"
    ConfigurazioneClasseDato:
      type: "string"
      enum:
        - identificativo
        - generico
        - specifica
        - referenti
        - collaudo
        - collaudo_configurato
        - produzione
        - produzione_configurato
    ConfigurazioneRuolo:
      type: "string"
      enum:
        - richiedente
        - referente
        - referente_superiore
        - gestore
    ConfigurazioneStato:
      type: "object"
      required:
        - nome
        - ruoli_abilitati
      properties:
        nome:
          $ref: '#/components/schemas/ConfigurazioneNomeStato'
        ruoli_abilitati:
          type: "array"
          items:
            $ref: '#/components/schemas/ConfigurazioneRuolo'
    ConfigurazioneCambioStato:
      type: "object"
      required:
        - stato_attuale
      properties:
        stato_attuale:
          $ref: '#/components/schemas/ConfigurazioneNomeStato'
        dati_obbligatori:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurazioneClasseDato'
        dati_non_modificabili:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurazioneClasseDato'
        dati_non_applicabili:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurazioneClasseDato'
        stato_successivo:
          $ref: '#/components/schemas/ConfigurazioneStato'
        stato_precedente:
          $ref: '#/components/schemas/ConfigurazioneStato'
        stati_ulteriori:
          type: "array"
          items:
            $ref: '#/components/schemas/ConfigurazioneStato'
    ConfigurazioneAutomatica:
      type: "object"
      required:
        - stato_iniziale
        - stato_in_configurazione
        - stato_finale
      properties:
        stato_iniziale:
          $ref: '#/components/schemas/ConfigurazioneNomeStato'
        stato_in_configurazione:
          $ref: '#/components/schemas/ConfigurazioneNomeStato'
        stato_finale:
          $ref: '#/components/schemas/ConfigurazioneNomeStato'
    ConfigurazioneWorkflow:
      type: "object"
      required:
        - stati
        - stato_iniziale
        - cambi_stato
      properties:
        stati:
          type: "array"
          items:
            $ref: '#/components/schemas/ConfigurazioneNomeStato'
        stato_iniziale:
          $ref: '#/components/schemas/ConfigurazioneNomeStato'
        stati_finali:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurazioneNomeStato'
        stato_archiviato:
          $ref: '#/components/schemas/ConfigurazioneNomeStato'
        cambi_stato:
          type: "array"
          items:
            $ref: '#/components/schemas/ConfigurazioneCambioStato'
    ConfigurazioneAmbienteDefaultDashboard:
      type: "string"
      enum:
        - collaudo
        - produzione
        - scelta_ambiente
    ConfigurazionePeriodiDashboard:
      type: "object"
      required:
        - periodo_1
        - periodo_2
      properties:
        periodo_1:
          type: "integer"
          format: "int64"
        periodo_2:
          type: "integer"
          format: "int64"
    ConfigurazioneGenerale:
      type: "object"
      required:
        - site
      properties:
        site:
          type: "string"
          format: "URI"
    AccessoAmministrazioneItem:
      type: "object"
      required:
        - lettura
        - scrittura
      properties:
        lettura:
          type: array
          items:
            $ref: '#/components/schemas/RuoloUtenteEnum'
        scrittura:
          type: array
          items:
            $ref: '#/components/schemas/RuoloUtenteEnum'
    ConfigurazioneAmministrazione:
      type: "object"
      properties:
        generale:
          $ref: '#/components/schemas/AccessoAmministrazioneItem'
        gruppi:
          $ref: '#/components/schemas/AccessoAmministrazioneItem'
        domini:
          $ref: '#/components/schemas/AccessoAmministrazioneItem'
        client:
          $ref: '#/components/schemas/AccessoAmministrazioneItem'
        soggetti:
          $ref: '#/components/schemas/AccessoAmministrazioneItem'
        organizzazioni:
          $ref: '#/components/schemas/AccessoAmministrazioneItem'
        utenti:
          $ref: '#/components/schemas/AccessoAmministrazioneItem'
        classi_utente:
          $ref: '#/components/schemas/AccessoAmministrazioneItem'
    ConfigurazioneDashboard:
      type: "object"
      required:
        - abilitato
      properties:
        abilitato:
          type: "boolean"
        periodi:
          $ref: '#/components/schemas/ConfigurazionePeriodiDashboard'
        ambiente_default:
          $ref: '#/components/schemas/ConfigurazioneAmbienteDefaultDashboard'
    ConfigurazioneOrganizzazione:
      type: "object"
      required:
        - codice_ente_abilitato
        - codice_fiscale_ente_abilitato
        - id_tipo_utente_abilitato
      properties:
        codice_ente_abilitato:
          type: "boolean"
        codice_fiscale_ente_abilitato:
          type: "boolean"
        id_tipo_utente_abilitato:
          type: "boolean"
    ConfigurazioneSoggetto:
      type: "object"
      required:
        - profilo_gateway_abilitato
      properties:
        profilo_gateway_abilitato:
          type: "boolean"
        profilo_gateway_default:
          $ref: '#/components/schemas/TipoSoggettoGateway'
        lista_profili_gateway:
          type: array
          items:
            $ref: '#/components/schemas/TipoSoggettoGateway'
    ConfigurazioneDominio:
      type: "object"
      properties:
        multi_dominio:
          $ref: '#/components/schemas/ConfigurazioneMultiDominio'
    ConfigurazioneMultiDominio:
      type: "object"
      required:
        - email
        - autorizzazione_richiesta
      properties:
        email:
          $ref: "#/components/schemas/Email"
        autorizzazione_richiesta:
          type: "boolean"
    ConfigurazioneNotifiche:
      type: "object"
      properties:
        emetti_per_tipi:
          type: array
          items:
            $ref: "#/components/schemas/TipoNotificaEnum"
        emetti_per_entita:
          type: array
          items:
            $ref: "#/components/schemas/TipoEntitaNotifica"
        emetti_per_ruoli:
          type: array
          items:
            $ref: "#/components/schemas/RuoloNotifica"
    ConfigurazioneGruppo:
      type: "object"
      required:
        - visualizzazione_abilitata
      properties:
        visualizzazione_abilitata:
          type: "boolean"
    ConfigurazioneUtente:
      type: "object"
      required:
        - autoregistrazione_abilitata
        - autoabilitazione_abilitata
      properties:
        consenti_accesso_anonimo:
          type: "boolean"
        autoregistrazione_abilitata:
          type: "boolean"
        autoabilitazione_abilitata:
          type: "boolean"
        ruolo_da_idm_abilitato:
          type: "boolean"
        aggiornamento_idm_abilitato:
          type: "boolean"
    StatoProfiloEnum:
      type: "string"
      enum:
        - sconosciuto
        - non_configurato
        - abilitato
        - disabilitato
    ItemMessaggio:
      type: object
      required:
      - data
      - oggetto
      properties:
        data:
          type: "string"
          format: "date-time"
          example: "2017-07-21T17:32:28Z"
        id_messaggio:
          $ref: "#/components/schemas/IdMessaggio"
        autore:
          $ref: "#/components/schemas/ItemUtente"
        oggetto:
          $ref: "#/components/schemas/String255"
        testo:
          $ref: "#/components/schemas/String4000"
        allegati:
          type: "array"
          items:
            $ref: '#/components/schemas/AllegatoMessaggio'
    Profilo:
        type: "object"
        required:
          - utente
        properties:
          utente:
            $ref: '#/components/schemas/Utente'
          stato:
            $ref: '#/components/schemas/StatoProfiloEnum'
          idm:
            $ref: '#/components/schemas/Idm'
          settings:
            type: object
    OkKoEnum:
      type: "string"
      enum:
       - ok
       - ko
    CheckDati:
      type: "object"
      required:
        - esito
      properties:
        esito:
          $ref: '#/components/schemas/OkKoEnum'
        errori:
          type: array
          items:
            $ref: '#/components/schemas/EntitaComplessaError'
    Grant:
      type: "object"
      properties:
        ruoli:
          type: array
          items:
            $ref: '#/components/schemas/Ruolo'
        identificativo:
          $ref: '#/components/schemas/GrantType'
        generico:
          $ref: '#/components/schemas/GrantType'
        specifica:
          $ref: '#/components/schemas/GrantType'
        referenti:
          $ref: '#/components/schemas/GrantType'
        collaudo:
          $ref: '#/components/schemas/GrantType'
        produzione:
          $ref: '#/components/schemas/GrantType'
    GrantType:
      type: "string"
      enum:
        - nessuno
        - lettura
        - scrittura
    Ruolo:
      type: "string"
      enum:
        - gestore
        - richiedente
        - referente
        - referente_tecnico
        - referente_superiore
        - referente_tecnico_superiore
    Idm:
      type: "object"
      properties:
        principal:
          $ref: "#/components/schemas/String255"
        sede:
          $ref: "#/components/schemas/String255"
        ruoli:
          type: array
          items:
            $ref: "#/components/schemas/String255"
        ruolo_codificato:
          $ref: "#/components/schemas/RuoloUtenteEnum"
        nome:
          $ref: "#/components/schemas/String255"
        cognome:
          $ref: "#/components/schemas/String255"
        codice_fiscale:
          $ref: "#/components/schemas/String255"
        email:
          $ref: "#/components/schemas/Email"
        telefono:
          $ref: "#/components/schemas/String255"
        matricola:
          $ref: "#/components/schemas/String255"
    PageMetadata:
      type: object
      properties:
        size:
          type: "integer"
          format: int64
        totalElements:
          type: "integer"
          format: int64
        totalPages:
          type: "integer"
          format: int64
        number:
          type: "integer"
          format: int64
    PagedModelItemAdesione:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ItemAdesione'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelItemErogazioneAdesione:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ItemErogazioneAdesione'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelItemApi:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ItemApi'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelAllegato:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Allegato'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelItemMessaggio:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ItemMessaggio'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelItemComunicazione:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ItemComunicazione'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelItemServizioGruppo:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ItemServizioGruppo'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelItemServizio:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ItemServizio'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelComponente:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ItemServizio'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelItemTassonomia:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ItemTassonomia'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelItemOrganizzazione:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ItemOrganizzazione'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CountNotifica:
      type: object
      properties:
        count:
          type: integer
          format: int64
    PagedModelItemNotifica:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ItemNotifica'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelItemSoggetto:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ItemSoggetto'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelItemConfigurazioneAdesione:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProprietaCustomAdesione'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelItemClientAdesione:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ItemClientAdesione'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelItemClient:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ItemClient'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelItemClasseUtente:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ItemClasseUtente'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelReferenteClasseUtente:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ReferenteClasseUtente'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelItemUtente:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ItemUtente'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelItemDominio:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ItemDominio'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelReferente:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Referente'
        page:
          $ref: '#/components/schemas/PageMetadata'
    ListItemGruppo:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ItemGruppo'
    ListItemCategoria:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ItemCategoriaServizio'
    ItemTassonomia:
      required:
        - id_tassonomia
        - nome
        - descrizione
      type: "object"
      properties:
        id_tassonomia:
          $ref: "#/components/schemas/IdTassonomia"
        nome:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        visibile:
          type: "boolean"
        obbligatorio:
          type: "boolean"
    TassonomiaCreate:
      required:
        - nome
        - descrizione
        - visibile
        - obbligatorio
      type: "object"
      properties:
        nome:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        visibile:
          type: "boolean"
        obbligatorio:
          type: "boolean"
        immagine:
          $ref: "#/components/schemas/Base64String"
    TassonomiaUpdate:
      type: "object"
      properties:
        nome:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        visibile:
          type: "boolean"
        obbligatorio:
          type: "boolean"
    Tassonomia:
      required:
        - id_tassonomia
        - nome
        - descrizione
      type: "object"
      properties:
        id_tassonomia:
          $ref: "#/components/schemas/IdTassonomia"
        nome:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        visibile:
          type: "boolean"
        obbligatorio:
          type: "boolean"
        immagine:
          $ref: "#/components/schemas/Base64String"
    CategoriaCreate:
      allOf:
      - $ref: "#/components/schemas/CategoriaFiglioCreate"
      - type: "object"
        properties:
          categoria_padre:
            $ref: "#/components/schemas/IdCategoria"
    CategorieCreate:
      type: "object"
      properties:
        categorie:
          type: array
          items:
            $ref: "#/components/schemas/IdCategoria"
    CategoriaFiglioCreate:
      required:
        - nome
      type: "object"
      properties:
        nome:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        immagine:
          $ref: "#/components/schemas/Base64String"
        figli:
          type: array
          items:
            $ref: "#/components/schemas/CategoriaFiglioCreate"
    ItemCategoria:
      required:
        - id_tassonomia
        - id_categoria
        - nome
        - nome_tassonomia
      type: "object"
      properties:
        id_tassonomia:
          $ref: "#/components/schemas/IdTassonomia"
        id_categoria:
          $ref: "#/components/schemas/IdCategoria"
        id_categoria_padre:
            $ref: "#/components/schemas/IdCategoria"
        nome:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        immagine:
          $ref: "#/components/schemas/Base64String"
        figli:
          type: array
          items:
            $ref: "#/components/schemas/ItemCategoria"
        path_gruppo:
          type: array
          items:
            $ref: "#/components/schemas/PathGruppo"
    ItemCategoriaServizio:
      required:
        - tassonomia
        - id_categoria
        - nome
      type: "object"
      properties:
        tassonomia:
          $ref: "#/components/schemas/ItemTassonomia"
        id_categoria:
          $ref: "#/components/schemas/IdCategoria"
        nome:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        immagine:
          $ref: "#/components/schemas/Base64String"
        path_categoria:
          type: array
          items:
            $ref: "#/components/schemas/PathCategoria"
        figli:
          type: array
          items:
            $ref: "#/components/schemas/ItemCategoriaServizio"
        servizi:
          type: array
          items:
            $ref: "#/components/schemas/ItemServizio"
    Categoria:
      required:
        - tassonomia
        - id_categoria
        - nome
      type: "object"
      properties:
        tassonomia:
          $ref: "#/components/schemas/ItemTassonomia"
        id_categoria:
          $ref: "#/components/schemas/IdCategoria"
        nome:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        immagine:
          $ref: "#/components/schemas/Base64String"
        path_categoria:
          type: array
          items:
            $ref: "#/components/schemas/PathCategoria"
        figli:
          type: array
          items:
            $ref: "#/components/schemas/Categoria"
        servizi:
          type: array
          items:
            $ref: "#/components/schemas/ItemServizio"
    CategoriaUpdate:       
      type: "object"
      required:
      - nome
      properties:
        nome:
          $ref: "#/components/schemas/String255"
        immagine:
          $ref: "#/components/schemas/Base64String"
        descrizione:
          $ref: "#/components/schemas/String255"
        figli:
          type: array
          items:
            $ref: "#/components/schemas/CategoriaFiglioCreate"
    SoggettoCreate:
      type: "object"
      required:
        - nome
        - organizzazione
        - referente
        - aderente
      properties:
        nome:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        id_organizzazione:
          $ref: "#/components/schemas/IdOrganizzazione"
        referente:
          type: "boolean"
          default: false
        aderente:
          type: "boolean"
          default: false
        skip_collaudo:
          type: "boolean"
          default: false
        nome_gateway:
          $ref: "#/components/schemas/String255"
        tipo_gateway:
          $ref: "#/components/schemas/TipoSoggettoGateway"
        url_invocazione:
          $ref: "#/components/schemas/String255"
        url_prefix_collaudo:
          $ref: "#/components/schemas/String255"
        url_prefix_produzione:
          $ref: "#/components/schemas/String255"
    TipoSoggettoGateway:
      type: "string"
      enum:
      - "APIGateway"
      - "ModIPA"
      - "SPCoop"
      - "FatturaPA"
      - "eDelivery"
    SoggettoUpdate:
      type: "object"
      required:
        - nome
        - organizzazione
        - referente
        - aderente
      properties:
        nome:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        id_organizzazione:
          $ref: "#/components/schemas/IdOrganizzazione"
        referente:
          type: "boolean"
          default: false
        aderente:
          type: "boolean"
          default: false
        skip_collaudo:
          type: "boolean"
          default: false
        nome_gateway:
          $ref: "#/components/schemas/String255"
        tipo_gateway:
          $ref: "#/components/schemas/TipoSoggettoGateway"
        url_invocazione:
          $ref: "#/components/schemas/String255"
        url_prefix_collaudo:
          $ref: "#/components/schemas/String255"
        url_prefix_produzione:
          $ref: "#/components/schemas/String255"
    ItemSoggettoLimited:
      type: "object"
      required:
        - id_soggetto
        - nome
        - organizzazione
        - referente
        - aderente
      properties:
        id_soggetto:
          $ref: "#/components/schemas/IdSoggetto"
        nome:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        referente:
          type: "boolean"
          default: false
        aderente:
          type: "boolean"
          default: false
        nome_gateway:
          $ref: "#/components/schemas/String255"
        tipo_gateway:
          $ref: "#/components/schemas/TipoSoggettoGateway"
    ItemSoggetto:
      type: "object"
      required:
        - id_soggetto
        - nome
        - organizzazione
        - referente
        - aderente
      properties:
        id_soggetto:
          $ref: "#/components/schemas/IdSoggetto"
        nome:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        organizzazione:
          $ref: "#/components/schemas/ItemOrganizzazione"
        referente:
          type: "boolean"
          default: false
        aderente:
          type: "boolean"
          default: false
        skip_collaudo:
          type: "boolean"
          default: false
        nome_gateway:
          $ref: "#/components/schemas/String255"
        tipo_gateway:
          $ref: "#/components/schemas/TipoSoggettoGateway"
        url_invocazione:
          $ref: "#/components/schemas/String255"
        url_prefix_collaudo:
          $ref: "#/components/schemas/String255"
        url_prefix_produzione:
          $ref: "#/components/schemas/String255"
    ItemClientAdesione:
      allOf:
      - $ref: "#/components/schemas/ItemClient"
      - type: "object"
        required:
          - profilo
        properties:
          profilo:
            $ref: "#/components/schemas/String255"
          nome_proposto:
            $ref: "#/components/schemas/String255"
    StatoClientEnum:
      type: "string"
      enum:
        - nuovo
        - configurato
    ItemClient:
      type: "object"
      required:
        - id_client
        - soggetto
        - ambiente
        - nome
        - stato
      properties:
        id_client:
          $ref: "#/components/schemas/IdClient"
        soggetto:
          $ref: "#/components/schemas/ItemSoggetto"
        ambiente:
          $ref: "#/components/schemas/AmbienteEnum"
        nome:
          $ref: "#/components/schemas/String255"
        stato:
          $ref: "#/components/schemas/StatoClientEnum"
        indirizzo_ip:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        dati_specifici:
          $ref: "#/components/schemas/DatiSpecificiClient"
    Client:
      type: "object"
      required:
        - id_client
        - soggetto
        - ambiente
        - nome
        - stato
      properties:
        id_client:
          $ref: "#/components/schemas/IdClient"
        soggetto:
          $ref: "#/components/schemas/ItemSoggetto"
        ambiente:
          $ref: "#/components/schemas/AmbienteEnum"
        nome:
          $ref: "#/components/schemas/String255"
        stato:
          $ref: "#/components/schemas/StatoClientEnum"
        utilizzato_in_adesioni_configurate:
          type: boolean
        indirizzo_ip:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        dati_specifici:
          $ref: "#/components/schemas/DatiSpecificiClient"
    AdesioneClientCreate:
      allOf:
        - $ref: "#/components/schemas/AdesioneClientUpdate"
        - $ref: "#/components/schemas/ClientCreate"
    AdesioneIdClient:
      allOf:
        - $ref: "#/components/schemas/AdesioneClientUpdate"
        - type: "object"
          required:
            - id_soggetto
            - ambiente
            - nome
          properties:
            id_soggetto:
              $ref: "#/components/schemas/IdSoggetto"
            nome:
              $ref: "#/components/schemas/String255"
            ambiente:
              $ref: "#/components/schemas/AmbienteEnum"
    ClientCreate:
      type: "object"
      required:
        - id_soggetto
        - ambiente
        - nome
      properties:
        id_soggetto:
          $ref: "#/components/schemas/IdSoggetto"
        ambiente:
          $ref: "#/components/schemas/AmbienteEnum"
        nome:
          $ref: "#/components/schemas/String255"
        stato:
          $ref: "#/components/schemas/StatoClientEnum"
        indirizzo_ip:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        dati_specifici:
          $ref: "#/components/schemas/DatiSpecificiClientCreate"
    TipoCertificatoEnum:
      type: "string"
      enum:
        - fornito
        - richiesto_cn
        - richiesto_csr
    RateLimitingPeriodoEnum:
      type: "string"
      enum:
        - giorno
        - ora
        - minuto
    RateLimiting:
      type: "object"
      required:
        - quota
        - periodo
      properties:
        quota:
          type: integer
          format: int32
        periodo:
          $ref: "#/components/schemas/RateLimitingPeriodoEnum"
    DatiSpecificiClientCreate:
      type: "object"
      required:
        - auth_type
      properties:
        auth_type:
          $ref: "#/components/schemas/AuthTypeEnum"
        indirizzo_ip:
          $ref: "#/components/schemas/String255"
        rate_limiting:
          $ref: "#/components/schemas/RateLimiting"
        finalita:
          type: "string"
          format: "uuid"
      discriminator:
        propertyName: "auth_type"
        mapping:
          http_basic: "#/components/schemas/AuthTypeHttpBasicCreate"
          https: "#/components/schemas/AuthTypeHttpsCreate"
          sign: "#/components/schemas/AuthTypeSignCreate"
          pdnd: "#/components/schemas/AuthTypePdndCreate"
          https_sign: "#/components/schemas/AuthTypeHttpsSignCreate"
          https_pdnd: "#/components/schemas/AuthTypeHttpsPdndCreate"
          sign_pdnd: "#/components/schemas/AuthTypeSignPdndCreate"
          https_pdnd_sign: "#/components/schemas/AuthTypeHttpsPdndSignCreate"
          oauth_client_credentials: "#/components/schemas/AuthTypeOAuthClientCredentialsCreate"
          oauth_authorization_code: "#/components/schemas/AuthTypeOAuthAuthorizationCodeCreate"
          indirizzo_ip: "#/components/schemas/AuthTypeIndirizzoIpCreate"
          no_dati: "#/components/schemas/AuthTypeNoDatiCreate"
    AuthTypeHttpBasicCreate:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClientCreate'
        - type: object
          properties:
            username:
              $ref: "#/components/schemas/String255"
            password:
              $ref: "#/components/schemas/String255"
    CertificatoClientCreate:
      type: "object"
      required:
        - tipo_certificato
      properties:
        tipo_certificato:
          $ref: "#/components/schemas/TipoCertificatoEnum"
      discriminator:
        propertyName: "tipo_certificato"
        mapping:
          fornito: "#/components/schemas/CertificatoClientFornitoCreate"
          richiesto_cn: "#/components/schemas/CertificatoClientRichiestoCnCreate"
          richiesto_csr: "#/components/schemas/CertificatoClientRichiestoCsrCreate"
    CertificatoClientFornitoCreate:
      allOf:
        - $ref: '#/components/schemas/CertificatoClientCreate'
        - type: object
          required:
            - certificato
          properties:
            certificato:
              $ref: '#/components/schemas/DocumentoUpdate'
    CertificatoClientRichiestoCnCreate:
      allOf:
        - $ref: '#/components/schemas/CertificatoClientCreate'
        - type: object
          required:
            - cn
          properties:
            cn:
              $ref: "#/components/schemas/String255"
            certificato:
              $ref: '#/components/schemas/DocumentoUpdate'
    CertificatoClientRichiestoCsrCreate:
      allOf:
        - $ref: '#/components/schemas/CertificatoClientCreate'
        - type: object
          required:
            - richiesta
          properties:
            richiesta:
              $ref: '#/components/schemas/DocumentoUpdate'
            modulo_richiesta:
              $ref: '#/components/schemas/DocumentoUpdate'
            certificato:
              $ref: '#/components/schemas/DocumentoUpdate'
    AuthTypeHttpsCreate:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClientCreate'
        - type: object
          required:
            - certificato_autenticazione
          properties:
            certificato_autenticazione:
              $ref: '#/components/schemas/CertificatoClientCreate'
    AuthTypeSignCreate:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClientCreate'
        - type: object
          required:
            - certificato_firma
          properties:
            certificato_firma:
              $ref: '#/components/schemas/CertificatoClientCreate'
    AuthTypeHttpsSignCreate:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClientCreate'
        - type: object
          required:
            - certificato_autenticazione
            - certificato_firma
          properties:
            certificato_autenticazione:
              $ref: '#/components/schemas/CertificatoClientCreate'
            certificato_firma:
              $ref: '#/components/schemas/CertificatoClientCreate'
    AuthTypeHttpsPdndCreate:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClientCreate'
        - type: object
          required:
            - certificato_autenticazione
            - client_id
          properties:
            certificato_autenticazione:
              $ref: '#/components/schemas/CertificatoClientCreate'
            client_id:
              $ref: "#/components/schemas/String255"
    AuthTypeSignPdndCreate:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClientCreate'
        - type: object
          required:
            - certificato_firma
            - client_id
          properties:
            certificato_firma:
              $ref: '#/components/schemas/CertificatoClientCreate'
            client_id:
              $ref: "#/components/schemas/String255"
    AuthTypePdndCreate:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClientCreate'
        - type: object
          required:
            - client_id
          properties:
            client_id:
              $ref: "#/components/schemas/String255"
    AuthTypeHttpsPdndSignCreate:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClientCreate'
        - type: object
          required:
            - certificato_autenticazione
            - certificato_firma
            - client_id
          properties:
            certificato_autenticazione:
              $ref: '#/components/schemas/CertificatoClientCreate'
            certificato_firma:
              $ref: '#/components/schemas/CertificatoClientCreate'
            client_id:
              $ref: "#/components/schemas/String255"
    AuthTypeOAuthClientCredentialsCreate:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClientCreate'
        - type: object
          properties:
            client_id:
              $ref: "#/components/schemas/String255"
    AuthTypeOAuthAuthorizationCodeCreate:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClientCreate'
        - type: object
          required:
            - url_redirezione
            - url_esposizione
            - help_desk
            - nome_applicazione_portale
          properties:
            url_redirezione:
              $ref: "#/components/schemas/String4000"
            url_esposizione:
              $ref: "#/components/schemas/String255"
            help_desk:
              $ref: "#/components/schemas/String255"
            nome_applicazione_portale:
              $ref: "#/components/schemas/String255"
            client_id:
              $ref: "#/components/schemas/String255"
    AuthTypeIndirizzoIpCreate:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClientCreate'
        - type: object
          required:
            - indirizzo_ip
    AuthTypeNoDatiCreate:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClientCreate'
        - type: object
    DatiSpecificiClient:
      type: "object"
      required:
        - auth_type
      properties:
        auth_type:
          $ref: "#/components/schemas/AuthTypeEnum"
        indirizzo_ip:
          $ref: "#/components/schemas/String255"
        rate_limiting:
          $ref: "#/components/schemas/RateLimiting"
        finalita:
          type: "string"
          format: "uuid"
      discriminator:
        propertyName: "auth_type"
        mapping:
          http_basic: "#/components/schemas/AuthTypeHttpBasic"
          https: "#/components/schemas/AuthTypeHttps"
          sign: "#/components/schemas/AuthTypeSign"
          pdnd: "#/components/schemas/AuthTypePdnd"
          https_sign: "#/components/schemas/AuthTypeHttpsSign"
          sign_pdnd: "#/components/schemas/AuthTypeSignPdnd"
          https_pdnd: "#/components/schemas/AuthTypeHttpsPdnd"
          https_pdnd_sign: "#/components/schemas/AuthTypeHttpsPdndSign"
          oauth_client_credentials: "#/components/schemas/AuthTypeOAuthClientCredentials"
          oauth_authorization_code: "#/components/schemas/AuthTypeOAuthAuthorizationCode"
          indirizzo_ip: "#/components/schemas/AuthTypeIndirizzoIp"
          no_dati: "#/components/schemas/AuthTypeNoDati"
    AuthTypeHttpBasic:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClient'
        - type: object
          properties:
            username:
              $ref: "#/components/schemas/String255"
            password:
              $ref: "#/components/schemas/String255"
    CertificatoClient:
      type: "object"
      required:
        - tipo_certificato
      properties:
        tipo_certificato:
          $ref: "#/components/schemas/TipoCertificatoEnum"
      discriminator:
        propertyName: "tipo_certificato"
        mapping:
          fornito: "#/components/schemas/CertificatoClientFornito"
          richiesto_cn: "#/components/schemas/CertificatoClientRichiestoCn"
          richiesto_csr: "#/components/schemas/CertificatoClientRichiestoCsr"
    CertificatoClientFornito:
      allOf:
        - $ref: '#/components/schemas/CertificatoClient'
        - type: object
          required:
            - certificato
          properties:
            certificato:
              $ref: '#/components/schemas/Documento'
    CertificatoClientRichiestoCn:
      allOf:
        - $ref: '#/components/schemas/CertificatoClient'
        - type: object
          required:
            - cn
          properties:
            cn:
              $ref: "#/components/schemas/String255"
            certificato:
              $ref: '#/components/schemas/Documento'
    CertificatoClientRichiestoCsr:
      allOf:
        - $ref: '#/components/schemas/CertificatoClient'
        - type: object
          required:
            - richiesta
          properties:
            richiesta:
              $ref: '#/components/schemas/Documento'
            modulo_richiesta:
              $ref: '#/components/schemas/Documento'
            certificato:
              $ref: '#/components/schemas/Documento'
    AuthTypeHttps:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClient'
        - type: object
          required:
            - certificato_autenticazione
          properties:
            certificato_autenticazione:
              $ref: '#/components/schemas/CertificatoClient'
    AuthTypeSign:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClient'
        - type: object
          required:
            - certificato_firma
          properties:
            certificato_firma:
              $ref: '#/components/schemas/CertificatoClient'
    AuthTypeHttpsSign:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClient'
        - type: object
          required:
            - certificato_autenticazione
            - certificato_firma
          properties:
            certificato_autenticazione:
              $ref: '#/components/schemas/CertificatoClient'
            certificato_firma:
              $ref: '#/components/schemas/CertificatoClient'
    AuthTypeHttpsPdnd:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClient'
        - type: object
          required:
            - certificato_autenticazione
            - client_id
          properties:
            certificato_autenticazione:
              $ref: '#/components/schemas/CertificatoClient'
            client_id:
              $ref: "#/components/schemas/String255"
    AuthTypeSignPdnd:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClient'
        - type: object
          required:
            - certificato_firma
            - client_id
          properties:
            certificato_firma:
              $ref: '#/components/schemas/CertificatoClient'
            client_id:
              $ref: "#/components/schemas/String255"
    AuthTypePdnd:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClient'
        - type: object
          required:
            - client_id
          properties:
            client_id:
              $ref: "#/components/schemas/String255"
    AuthTypeHttpsPdndSign:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClient'
        - type: object
          required:
            - certificato_autenticazione
            - certificato_firma
            - client_id
          properties:
            certificato_autenticazione:
              $ref: '#/components/schemas/CertificatoClient'
            certificato_firma:
              $ref: '#/components/schemas/CertificatoClient'
            client_id:
              $ref: "#/components/schemas/String255"
    AuthTypeOAuthClientCredentials:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClient'
        - type: object
          properties:
            client_id:
              $ref: "#/components/schemas/String255"
    AuthTypeOAuthAuthorizationCode:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClient'
        - type: object
          required:
            - url_redirezione
            - url_esposizione
            - help_desk
            - nome_applicazione_portale
          properties:
            url_redirezione:
              $ref: "#/components/schemas/String255"
            url_esposizione:
              $ref: "#/components/schemas/String255"
            help_desk:
              $ref: "#/components/schemas/String255"
            nome_applicazione_portale:
              $ref: "#/components/schemas/String255"
            client_id:
              $ref: "#/components/schemas/String255"
    AuthTypeIndirizzoIp:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClient'
        - type: object
          required:
            - indirizzo_ip
    AuthTypeNoDati:
      allOf:
        - $ref: '#/components/schemas/DatiSpecificiClient'
        - type: object
    StatoClientUpdate:
      type: "object"
      required:
        - stato
      properties:
        stato:
          $ref: "#/components/schemas/StatoClientEnum"
    ClientUpdate:
      type: "object"
      required:
        - dati_specifici
        - id_soggetto
        - ambiente
        - nome
      properties:
        id_soggetto:
          $ref: "#/components/schemas/IdSoggetto"
        ambiente:
          $ref: "#/components/schemas/AmbienteEnum"
        indirizzo_ip:
          $ref: "#/components/schemas/String255"
        nome:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        dati_specifici:
          $ref: "#/components/schemas/DatiSpecificiClientCreate"
    Soggetto:
      type: "object"
      required:
        - id_soggetto
        - nome
        - organizzazione
        - referente
        - aderente
      properties:
        id_soggetto:
          $ref: "#/components/schemas/IdSoggetto"
        nome:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        nome_gateway:
          $ref: "#/components/schemas/String255"
        tipo_gateway:
          $ref: "#/components/schemas/TipoSoggettoGateway"
        organizzazione:
          $ref: "#/components/schemas/ItemOrganizzazione"
        codice_ente:
          $ref: "#/components/schemas/String255"
        codice_fiscale_soggetto:
          $ref: "#/components/schemas/String255"
        id_tipo_utente:
          $ref: "#/components/schemas/String255"
        referente:
          type: "boolean"
          default: false
        aderente:
          type: "boolean"
          default: false
        skip_collaudo:
          type: "boolean"
          default: false
        vincola_skip_collaudo:
          type: "boolean"
        vincola_referente:
          type: "boolean"
        vincola_aderente:
          type: "boolean"
        url_invocazione:
          $ref: "#/components/schemas/String255"
        url_prefix_collaudo:
          $ref: "#/components/schemas/String255"
        url_prefix_produzione:
          $ref: "#/components/schemas/String255"
    Organizzazione:
      type: "object"
      required:
        - "id_organizzazione"
        - "nome"
        - "referente"
        - "aderente"
        - "vincola_aderente"
        - "vincola_referente"
        - "esterna"
        - "cambio_esterna_consentito"
      properties:
        id_organizzazione:
          $ref: "#/components/schemas/IdOrganizzazione"
        nome:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        codice_ente:
          $ref: "#/components/schemas/String255"
        codice_fiscale_soggetto:
          $ref: "#/components/schemas/String255"
        id_tipo_utente:
          $ref: "#/components/schemas/String255"
        soggetto_default:
          $ref: "#/components/schemas/ItemSoggettoLimited"
        referente:
          type: "boolean"
        aderente:
          type: "boolean"
        vincola_referente:
          type: "boolean"
        vincola_aderente:
          type: "boolean"
        esterna:
          type: "boolean"
        cambio_esterna_consentito:
          type: "boolean"
    TipoEntitaNotifica:
      type: "string"
      enum:
        - servizio
        - adesione
    TipoNotificaEnum:
      type: "string"
      enum:
        - comunicazione
        - cambio_stato
    StatoNotifica:
      type: "string"
      enum:
        - nuova
        - letta
        - archiviata
    RuoloNotifica:
      type: "string"
      enum:
        - servizio_referente_dominio
        - servizio_referente_tecnico_dominio
        - servizio_referente_servizio
        - servizio_referente_tecnico_servizio
        - servizio_richiedente_servizio
        - adesione_referente_dominio
        - adesione_referente_tecnico_dominio
        - adesione_referente_servizio
        - adesione_referente_tecnico_servizio
        - adesione_richiedente_servizio
        - adesione_referente_adesione
        - adesione_referente_tecnico_adesione
        - adesione_richiedente_adesione
    UpdateNotifica:
      type: "object"
      properties:
        stato:
          $ref: "#/components/schemas/StatoNotifica"
    ItemNotifica:
      type: "object"
      properties:
        id_notifica:
          $ref: "#/components/schemas/IdNotifica"
        stato:
          $ref: "#/components/schemas/StatoNotifica"
        ruoli:
          type: array
          items:
            $ref: "#/components/schemas/RuoloNotifica"
        mittente:
          $ref: "#/components/schemas/ItemUtente"
        entita:
          $ref: "#/components/schemas/EntitaNotifica"
        tipo:
          $ref: "#/components/schemas/TipoNotifica"
        data:
          type: string
          format: date-time
    Notifica:
      type: "object"
      properties:
        id_notifica:
          $ref: "#/components/schemas/IdNotifica"
        stato:
          $ref: "#/components/schemas/StatoNotifica"
        ruoli:
          type: array
          items:
            $ref: "#/components/schemas/RuoloNotifica"
        mittente:
          $ref: "#/components/schemas/ItemUtente"
        entita:
          $ref: "#/components/schemas/EntitaNotifica"
        tipo:
          $ref: "#/components/schemas/TipoNotifica"
        data:
          type: string
          format: date-time
    TipoNotifica:
      oneOf:
        - $ref: "#/components/schemas/CambioStatoTipoNotifica"
        - $ref: "#/components/schemas/ComunicazioneTipoNotifica"
      discriminator:
        propertyName: tipo
        mapping:
          cambio_stato: '#/components/schemas/CambioStatoTipoNotifica'
          comunicazione: '#/components/schemas/ComunicazioneTipoNotifica'
    CambioStatoTipoNotifica:
      type: "object"
      properties:
        stato:
          type: string
        tipo:
          $ref: "#/components/schemas/TipoNotificaEnum"
    ComunicazioneTipoNotifica:
      type: "object"
      properties:
        oggetto:
          type: string
        testo:
          type: string
        tipo:
          $ref: "#/components/schemas/TipoNotificaEnum"
    EntitaNotifica:
      allOf:
        - type: object
          properties:
            id_entita:
              $ref: "#/components/schemas/IdServizio"
        - oneOf:
          - $ref: "#/components/schemas/ServizioEntitaNotifica"
          - $ref: "#/components/schemas/AdesioneEntitaNotifica"
      discriminator:
        propertyName: tipo_entita_padre
        mapping:
          servizio: '#/components/schemas/ServizioEntitaNotifica'
          adesione: '#/components/schemas/AdesioneEntitaNotifica'
    ServizioEntitaNotifica:
      type: "object"
      properties:
        servizio:
          $ref: "#/components/schemas/ItemServizio"
        tipo_entita_padre:
          $ref: "#/components/schemas/TipoEntitaNotifica"
    AdesioneEntitaNotifica:
      type: "object"
      properties:
        adesione:
          $ref: "#/components/schemas/ItemAdesione"
        tipo_entita_padre:
          $ref: "#/components/schemas/TipoEntitaNotifica"
    ItemOrganizzazione:
      type: "object"
      required:
        - "id_organizzazione"
        - "nome"
        - "referente"
        - "aderente"
      properties:
        id_organizzazione:
          $ref: "#/components/schemas/IdOrganizzazione"
        nome:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        codice_ente:
          $ref: "#/components/schemas/String255"
        codice_fiscale_soggetto:
          $ref: "#/components/schemas/String255"
        id_tipo_utente:
          $ref: "#/components/schemas/String255"
        soggetto_default:
          $ref: "#/components/schemas/ItemSoggettoLimited"
        referente:
          type: "boolean"
          default: false
        aderente:
          type: "boolean"
          default: false
        multi_soggetto:
          type: boolean
        esterna:
          type: "boolean"
          default: false
    OrganizzazioneCreate:
      type: "object"
      required:
        - "nome"
        - "referente"
        - "aderente"
      properties:
        nome:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        codice_ente:
          $ref: "#/components/schemas/String255"
        codice_fiscale_soggetto:
          $ref: "#/components/schemas/String255"
        id_tipo_utente:
          $ref: "#/components/schemas/String255"
        referente:
          type: "boolean"
          default: false
        aderente:
          type: "boolean"
          default: false
        esterna:
          type: "boolean"
          default: false
    OrganizzazioneUpdate:
      type: "object"
      required:
        - "nome"
        - "referente"
        - "aderente"
      properties:
        nome:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        codice_ente:
          $ref: "#/components/schemas/String255"
        codice_fiscale_soggetto:
          $ref: "#/components/schemas/String255"
        id_tipo_utente:
          $ref: "#/components/schemas/String255"
        id_soggetto_default:
          $ref: "#/components/schemas/IdSoggetto"
        referente:
          type: "boolean"
          default: false
        aderente:
          type: "boolean"
          default: false
        esterna:
          type: "boolean"
          default: false
    ClasseUtenteCreate:
      type: "object"
      required:
        - nome
      properties:
        nome:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
    ClasseUtenteUpdate:
      type: "object"
      required:
        - nome
      properties:
        nome:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
    ItemClasseUtente:
      type: "object"
      required:
        - id_classe_utente
        - nome
      properties:
        id_classe_utente:
          $ref: "#/components/schemas/IdClasseUtente"
        nome:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
    ClasseUtente:
      type: "object"
      required:
        - id_classe_utente
        - nome
      properties:
        id_classe_utente:
          $ref: "#/components/schemas/IdClasseUtente"
        nome:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
    TipoReferenteClasseUtenteEnum:
      type: "string"
      enum:
        - referente
        - associato
    ReferenteClasseUtente:
      type: "object"
      required:
        - utente
        - tipo
      properties:
        utente:
          $ref: "#/components/schemas/ItemUtente"
        tipo:
          $ref: "#/components/schemas/TipoReferenteClasseUtenteEnum"
    ReferenteClasseUtenteCreate:
      type: "object"
      required:
        - id_utente
        - tipo
      properties:
        id_utente:
          $ref: "#/components/schemas/IdUtente"
        tipo:
          $ref: "#/components/schemas/TipoReferenteClasseUtenteEnum"
    StatoUtenteEnum:
      type: "string"
      enum:
        - non_configurato
        - abilitato
        - disabilitato
    RuoloUtenteEnum:
      type: "string"
      enum:
        - referente_servizio
        - gestore
        - coordinatore
    RuoloUtenteEnumSearch:
      type: "string"
      enum:
        - nessun_ruolo
        - referente_servizio
        - gestore
        - coordinatore
    UtenteCreate:
      type: "object"
      required:
        - principal
        - nome
        - cognome
        - telefono_aziendale
        - email_aziendale
        - stato
      properties:
        principal:
          $ref: "#/components/schemas/String255"
        nome:
          $ref: "#/components/schemas/String255"
        cognome:
          $ref: "#/components/schemas/String255"
        telefono:
          $ref: "#/components/schemas/String255"
        email:
          $ref: "#/components/schemas/Email"
        telefono_aziendale:
          $ref: "#/components/schemas/String255"
        email_aziendale:
          $ref: "#/components/schemas/Email"
        note:
          $ref: "#/components/schemas/String255"
        metadati:
          $ref: "#/components/schemas/String255"
        stato:
          $ref: "#/components/schemas/StatoUtenteEnum"
        ruolo:
          $ref: "#/components/schemas/RuoloUtenteEnum"
        referente_tecnico:
          type: 'boolean'
        id_organizzazione:
          $ref: "#/components/schemas/IdOrganizzazione"
        classi_utente:
          type: "array"
          items:
            $ref: "#/components/schemas/IdClasseUtente"
        settings:
          type: object
    UtenteUpdate:
      type: "object"
      required:
        - principal
        - nome
        - cognome
        - telefono_aziendale
        - email_aziendale
        - stato
      properties:
        principal:
          $ref: "#/components/schemas/String255"
        nome:
          $ref: "#/components/schemas/String255"
        cognome:
          $ref: "#/components/schemas/String255"
        telefono:
          $ref: "#/components/schemas/String255"
        email:
          $ref: "#/components/schemas/Email"
        telefono_aziendale:
          $ref: "#/components/schemas/String255"
        email_aziendale:
          $ref: "#/components/schemas/Email"
        note:
          $ref: "#/components/schemas/String255"
        metadati:
          $ref: "#/components/schemas/String255"
        stato:
          $ref: "#/components/schemas/StatoUtenteEnum"
        ruolo:
          $ref: "#/components/schemas/RuoloUtenteEnum"
        referente_tecnico:
          type: 'boolean'
        id_organizzazione:
          $ref: "#/components/schemas/IdOrganizzazione"
        classi_utente:
          type: "array"
          items:
            $ref: "#/components/schemas/IdClasseUtente"
        settings:
          type: object
    ProfiloUpdate:
      type: "object"
      required:
        - nome
        - cognome
        - telefono_aziendale
        - email_aziendale
      properties:
        nome:
          $ref: "#/components/schemas/String255"
        cognome:
          $ref: "#/components/schemas/String255"
        telefono:
          $ref: "#/components/schemas/String255"
        email:
          $ref: "#/components/schemas/Email"
        telefono_aziendale:
          $ref: "#/components/schemas/String255"
        email_aziendale:
          $ref: "#/components/schemas/Email"
        note:
          $ref: "#/components/schemas/String255"
        metadati:
          $ref: "#/components/schemas/String255"
        settings:
          type: object
    ItemUtente:
      type: "object"
      required:
        - id_utente
        - principal
        - nome
        - cognome
        - telefono_aziendale
        - email_aziendale
        - stato
      properties:
        id_utente:
          $ref: "#/components/schemas/IdUtente"
        principal:
          $ref: "#/components/schemas/String255"
        nome:
          $ref: "#/components/schemas/String255"
        cognome:
          $ref: "#/components/schemas/String255"
        telefono:
          $ref: "#/components/schemas/String255"
        email:
          $ref: "#/components/schemas/Email"
        telefono_aziendale:
          $ref: "#/components/schemas/String255"
        email_aziendale:
          $ref: "#/components/schemas/Email"
        note:
          $ref: "#/components/schemas/String255"
        metadati:
          $ref: "#/components/schemas/String255"
        stato:
          $ref: "#/components/schemas/StatoUtenteEnum"
        ruolo:
          $ref: "#/components/schemas/RuoloUtenteEnum"
        referente_tecnico:
          type: 'boolean'
        organizzazione:
          $ref: "#/components/schemas/ItemOrganizzazione"
        classi_utente:
          type: "array"
          items:
            $ref: "#/components/schemas/ItemClasseUtente"
    Utente:
      type: "object"
      required:
        - id_utente
        - principal
        - nome
        - cognome
        - telefono_aziendale
        - email_aziendale
        - stato
      properties:
        id_utente:
          $ref: "#/components/schemas/IdUtente"
        principal:
          $ref: "#/components/schemas/String255"
        nome:
          $ref: "#/components/schemas/String255"
        cognome:
          $ref: "#/components/schemas/String255"
        telefono:
          $ref: "#/components/schemas/String255"
        email:
          $ref: "#/components/schemas/Email"
        telefono_aziendale:
          $ref: "#/components/schemas/String255"
        email_aziendale:
          $ref: "#/components/schemas/Email"
        note:
          $ref: "#/components/schemas/String255"
        metadati:
          $ref: "#/components/schemas/String255"
        stato:
          $ref: "#/components/schemas/StatoUtenteEnum"
        ruolo:
          $ref: "#/components/schemas/RuoloUtenteEnum"
        referente_tecnico:
          type: 'boolean'
        organizzazione:
          $ref: "#/components/schemas/ItemOrganizzazione"
        classi_utente:
          type: "array"
          items:
            $ref: "#/components/schemas/ItemClasseUtente"
    GruppoCreate:
      type: "object"
      required:
        - "nome"
        - "tipo"
      properties:
        nome:
          $ref: "#/components/schemas/String255"
        tipo:
          $ref: "#/components/schemas/TipoServizio"
        padre:
            $ref: "#/components/schemas/IdGruppo"
        descrizione:
          $ref: "#/components/schemas/String255"
        descrizione_sintetica:
          $ref: "#/components/schemas/String255"
        immagine:
            $ref: "#/components/schemas/DocumentoCreate"
    GruppoUpdate:
      type: "object"
      required:
        - "nome"
        - "tipo"
      properties:
        nome:
          $ref: "#/components/schemas/String255"
        tipo:
          $ref: "#/components/schemas/TipoServizio"
        padre:
            $ref: "#/components/schemas/IdGruppo"
        descrizione:
          $ref: "#/components/schemas/String255"
        descrizione_sintetica:
          $ref: "#/components/schemas/String255"
        immagine:
            $ref: "#/components/schemas/DocumentoUpdate"
    ItemGruppo:
      type: "object"
      required:
        - "id_gruppo"
        - "nome"
        - "tipo"
      properties:
        id_gruppo:
          $ref: "#/components/schemas/IdGruppo"
        nome:
          $ref: "#/components/schemas/String255"
        tipo:
          $ref: "#/components/schemas/TipoServizio"
        padre:
            $ref: "#/components/schemas/ItemGruppo"
        figli:
          type: array
          items:
            $ref: "#/components/schemas/ItemGruppo"
        path_gruppo:
          type: array
          items:
            $ref: "#/components/schemas/PathGruppo"
        descrizione:
          $ref: "#/components/schemas/String255"
        descrizione_sintetica:
          $ref: "#/components/schemas/String255"
        immagine:
          $ref: "#/components/schemas/Documento"
    GerarchiaGruppo:
      type: "object"
      required:
        - id_gruppo
        - nome
      properties:
        id_gruppo:
          $ref: "#/components/schemas/IdGruppo"
        nome:
          $ref: "#/components/schemas/String255"
        padre:
            $ref: "#/components/schemas/GerarchiaGruppo"
    Gruppo:
      type: "object"
      required:
        - "id_gruppo"
        - "nome"
        - "tipo"
      properties:
        id_gruppo:
          $ref: "#/components/schemas/IdGruppo"
        nome:
          $ref: "#/components/schemas/String255"
        tipo:
          $ref: "#/components/schemas/TipoServizio"
        padre:
            $ref: "#/components/schemas/GerarchiaGruppo"
        figli:
          type: array
          items:
            $ref: "#/components/schemas/Gruppo"
        descrizione:
          $ref: "#/components/schemas/String255"
        descrizione_sintetica:
          $ref: "#/components/schemas/String255"
        immagine:
          $ref: "#/components/schemas/Documento"
    VisibilitaDominioEnum:
      type: "string"
      enum:
        - pubblico
        - privato
        - riservato
    VisibilitaServizioEnum:
      type: "string"
      enum:
        - pubblico
        - privato
        - riservato
        - componente
    DominioCreate:
      type: "object"
      required:
        - nome
        - id_soggetto_referente
        - visibilita
      properties:
        nome:
          $ref: "#/components/schemas/String255"
        id_soggetto_referente:
          $ref: "#/components/schemas/IdSoggetto"
        visibilita:
          $ref: "#/components/schemas/VisibilitaDominioEnum"
        classi:
          type: "array"
          items:
            $ref: "#/components/schemas/IdClasseUtente"
        descrizione:
          $ref: "#/components/schemas/String255"
        tag:
          $ref: "#/components/schemas/String255"
        deprecato:
          type: boolean
        skip_collaudo:
          type: "boolean"
          default: false
        url_invocazione:
          $ref: "#/components/schemas/String255"
        url_prefix_collaudo:
          $ref: "#/components/schemas/String255"
        url_prefix_produzione:
          $ref: "#/components/schemas/String255"
    DominioUpdate:
      type: "object"
      required:
        - nome
        - soggetto_referente
        - visibilita
      properties:
        nome:
          $ref: "#/components/schemas/String255"
        id_soggetto_referente:
          $ref: "#/components/schemas/IdSoggetto"
        visibilita:
          $ref: "#/components/schemas/VisibilitaDominioEnum"
        classi:
          type: "array"
          items:
            $ref: "#/components/schemas/IdClasseUtente"
        descrizione:
          $ref: "#/components/schemas/String255"
        tag:
          $ref: "#/components/schemas/String255"
        deprecato:
          type: boolean
        skip_collaudo:
          type: "boolean"
          default: false
        url_invocazione:
          $ref: "#/components/schemas/String255"
        url_prefix_collaudo:
          $ref: "#/components/schemas/String255"
        url_prefix_produzione:
          $ref: "#/components/schemas/String255"
    ItemDominio:
      type: "object"
      required:
        - id_dominio
        - nome
        - soggetto_referente
        - visibilita
      properties:
        id_dominio:
          $ref: "#/components/schemas/IdDominio"
        nome:
          $ref: "#/components/schemas/String255"
        soggetto_referente:
          $ref: "#/components/schemas/ItemSoggetto"
        visibilita:
          $ref: "#/components/schemas/VisibilitaDominioEnum"
        descrizione:
          $ref: "#/components/schemas/String255"
        tag:
          $ref: "#/components/schemas/String255"
        deprecato:
          type: boolean
        skip_collaudo:
          type: "boolean"
          default: false
        url_invocazione:
          $ref: "#/components/schemas/String255"
        url_prefix_collaudo:
          $ref: "#/components/schemas/String255"
        url_prefix_produzione:
          $ref: "#/components/schemas/String255"
    Dominio:
      type: "object"
      required:
        - id_dominio
        - nome
        - soggetto_referente
        - visibilita
      properties:
        id_dominio:
          $ref: "#/components/schemas/IdDominio"
        nome:
          $ref: "#/components/schemas/String255"
        soggetto_referente:
          $ref: "#/components/schemas/ItemSoggetto"
        visibilita:
          $ref: "#/components/schemas/VisibilitaDominioEnum"
        classi:
          type: "array"
          items:
            $ref: "#/components/schemas/ItemClasseUtente"
        descrizione:
          $ref: "#/components/schemas/String255"
        tag:
          $ref: "#/components/schemas/String255"
        deprecato:
          type: boolean
        skip_collaudo:
          type: "boolean"
          default: false
        vincola_skip_collaudo:
          type: "boolean"
        url_invocazione:
          $ref: "#/components/schemas/String255"
        url_prefix_collaudo:
          $ref: "#/components/schemas/String255"
        url_prefix_produzione:
          $ref: "#/components/schemas/String255"
    TipoReferenteEnum:
      type: "string"
      enum:
        - referente
        - referente_tecnico
    Referente:
      type: "object"
      required:
        - utente
        - tipo
      properties:
        utente:
          $ref: "#/components/schemas/ItemUtente"
        tipo:
          $ref: "#/components/schemas/TipoReferenteEnum"
    ReferenteCreate:
      type: "object"
      required:
        - id_utente
        - tipo
      properties:
        id_utente:
          $ref: "#/components/schemas/IdUtente"
        tipo:
          $ref: "#/components/schemas/TipoReferenteEnum"
    TipoServizioGruppo:
      type: "string"
      enum:
        - servizio
        - gruppo
    ItemServizioGruppo:
      type: "object"
      required:
        - "tipo"
        - "id"
        - "nome"
        - "descrizione"
        - "descrizione_sintetica"
      properties:
        tipo:
          $ref: "#/components/schemas/TipoServizioGruppo"
        id:
          $ref: "#/components/schemas/IdServizio"
        tipo_componente:
          $ref: "#/components/schemas/TipoServizio"
        nome:
          $ref: "#/components/schemas/String255"
        versione:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String4000"
        descrizione_sintetica:
          $ref: "#/components/schemas/String255"
        stato:
          $ref: "#/components/schemas/String255"
        visibilita:
          $ref: "#/components/schemas/VisibilitaServizioEnum"
        immagine:
          $ref: "#/components/schemas/Documento"
        dominio:
          $ref: "#/components/schemas/Dominio"
        id_gruppo_padre:
          $ref: "#/components/schemas/IdGruppo"
        path_gruppo:
          type: array
          items:
            $ref: "#/components/schemas/PathGruppo"
    PathGruppo:
      type: "object"
      required:
        - "id_gruppo"
        - "nome"
      properties:
        id_gruppo:
          $ref: "#/components/schemas/IdGruppo"
        nome:
          $ref: "#/components/schemas/String255"
    PathCategoria:
      type: "object"
      required:
        - "id_categoria"
        - "nome"
      properties:
        id_categoria:
          $ref: "#/components/schemas/IdCategoria"
        nome:
          $ref: "#/components/schemas/String255"
    TipoServizio:
      type: "string"
      enum:
        - API
        - Generico
    ItemServizio:
      type: "object"
      required:
        - "id_servizio"
        - "nome"
        - "versione"
        - "tipo"
        - "stato"
        - "multi_adesione"
        - "visibilita"
        - "descrizione"
        - "descrizione_sintetica"
      properties:
        id_servizio:
          $ref: "#/components/schemas/IdServizio"
        nome:
          $ref: "#/components/schemas/String255"
        versione:
          $ref: "#/components/schemas/String255"
        tipo:
          $ref: "#/components/schemas/TipoServizio"
        descrizione:
          $ref: "#/components/schemas/String4000"
        descrizione_sintetica:
          $ref: "#/components/schemas/String255"
        immagine:
          $ref: "#/components/schemas/Documento"
        visibilita:
            $ref: "#/components/schemas/VisibilitaServizioEnum"
        stato:
          $ref: "#/components/schemas/String255"
        multi_adesione:
          type: "boolean"
        adesione_disabilitata:
          type: "boolean"
        dominio:
            $ref: "#/components/schemas/Dominio"
        soggetto_interno:
          $ref: "#/components/schemas/ItemSoggetto"
        package:
          type: "boolean"
        skip_collaudo:
          type: "boolean"
          default: false
        path_gruppo:
          type: array
          items:
            $ref: "#/components/schemas/PathGruppo"
        url_invocazione:
          $ref: "#/components/schemas/String255"
        url_prefix_collaudo:
          $ref: "#/components/schemas/String255"
        url_prefix_produzione:
          $ref: "#/components/schemas/String255"
        eliminabile:
          type: "boolean"
    ServizioCreate:
      type: "object"
      required:
        - "nome"
        - "versione"
        - "tipo"
        - "id_dominio"
        - "multi_adesione"
      properties:
        nome:
          $ref: "#/components/schemas/String255"
        versione:
          $ref: "#/components/schemas/String255OnlyNumbers"
        tipo:
          $ref: "#/components/schemas/TipoServizio"
        id_dominio:
          $ref: "#/components/schemas/IdDominio"
        id_soggetto_interno:
          $ref: "#/components/schemas/IdSoggetto"
        referenti:
          type: "array"
          items:
            $ref: "#/components/schemas/ReferenteCreate"
        descrizione:
          $ref: "#/components/schemas/String4000"
        descrizione_sintetica:
          $ref: "#/components/schemas/String255"
        immagine:
            $ref: "#/components/schemas/DocumentoCreate"
        tags:
          type: "array"
          items:
            $ref: "#/components/schemas/String255"
        visibilita:
            $ref: "#/components/schemas/VisibilitaServizioEnum"
        classi:
          type: "array"
          items:
            $ref: "#/components/schemas/IdClasseUtente"
        termini_ricerca:
          $ref: "#/components/schemas/String255"
        note:
          $ref: "#/components/schemas/String1000"
        package:
          type: "boolean"
        skip_collaudo:
          type: "boolean"
          default: false
        multi_adesione:
          type: "boolean"
        adesione_disabilitata:
          type: "boolean"
        url_invocazione:
          $ref: "#/components/schemas/String255"
        url_prefix_collaudo:
          $ref: "#/components/schemas/String255"
        url_prefix_produzione:
          $ref: "#/components/schemas/String255"
    StatoUpdate:
      type: "object"
      required:
        - "stato"
      properties:
        stato:
          $ref: "#/components/schemas/String255"
        commento:
          $ref: "#/components/schemas/String255"
    Servizio:
      type: "object"
      required:
        - "id_servizio"
        - "nome"
        - "versione"
        - "tipo"
        - "stato"
        - "dominio"
        - "descrizione"
        - "descrizione_sintetica"
        - "multi_adesione"
        - "data_creazione"
        - "utente_richiedente"
      properties:
        id_servizio:
          $ref: "#/components/schemas/IdServizio"
        nome:
          $ref: "#/components/schemas/String255"
        versione:
          $ref: "#/components/schemas/String255"
        tipo:
          $ref: "#/components/schemas/TipoServizio"
        stato:
          $ref: "#/components/schemas/String255"
        stato_precedente:
          $ref: "#/components/schemas/String255"
        dominio:
          $ref: "#/components/schemas/Dominio"
        soggetto_interno:
          $ref: "#/components/schemas/ItemSoggetto"
        path_gruppo:
          type: array
          items:
            $ref: "#/components/schemas/PathGruppo"
        descrizione:
          $ref: "#/components/schemas/String4000"
        descrizione_sintetica:
          $ref: "#/components/schemas/String255"
        immagine:
          $ref: "#/components/schemas/Documento"
        tags:
          type: "array"
          items:
            $ref: "#/components/schemas/String255"
        visibilita:
            $ref: "#/components/schemas/VisibilitaServizioEnum"
        classi:
          type: "array"
          items:
            $ref: "#/components/schemas/ItemClasseUtente"
        termini_ricerca:
          $ref: "#/components/schemas/String255"
        note:
          $ref: "#/components/schemas/String1000"
        package:
          type: "boolean"
        skip_collaudo:
          type: "boolean"
          default: false
        vincola_skip_collaudo:
          type: "boolean"
        multi_adesione:
          type: "boolean"
        adesione_disabilitata:
          type: "boolean"
        url_invocazione:
          $ref: "#/components/schemas/String255"
        url_prefix_collaudo:
          $ref: "#/components/schemas/String255"
        url_prefix_produzione:
          $ref: "#/components/schemas/String255"
        data_creazione:
          type: "string"
          format: "date-time"
          example: "2017-07-21T17:32:28Z"
        data_ultima_modifica:
          type: "string"
          format: "date-time"
          example: "2017-07-21T17:32:28Z"
        utente_richiedente:
          $ref: "#/components/schemas/ItemUtente"
        utente_ultima_modifica:
          $ref: "#/components/schemas/ItemUtente"
        eliminabile:
          type: "boolean"
    ServizioUpdate:
      type: "object"
      properties:
        identificativo:
          $ref: "#/components/schemas/IdentificativoServizioUpdate"
        dati_generici:
          $ref: "#/components/schemas/DatiGenericiServizioUpdate"
    IdentificativoServizioUpdate:
      type: "object"
      required:
        - "nome"
        - "versione"
        - "tipo"
        - "dominio"
        - "multi_adesione"
      properties:
        nome:
          $ref: "#/components/schemas/String255"
        versione:
          $ref: "#/components/schemas/String255OnlyNumbers"
        tipo:
          $ref: "#/components/schemas/TipoServizio"
        id_dominio:
          $ref: "#/components/schemas/IdDominio"
        skip_collaudo:
          type: "boolean"
        id_soggetto_interno:
          $ref: "#/components/schemas/IdSoggetto"
        visibilita:
            $ref: "#/components/schemas/VisibilitaServizioEnum"
        classi:
          type: "array"
          items:
            $ref: "#/components/schemas/IdClasseUtente"
        multi_adesione:
          type: "boolean"
        adesione_disabilitata:
          type: "boolean"
        package:
          type: "boolean"
    DatiGenericiServizioUpdate:
      type: "object"
      properties:
        descrizione:
          $ref: "#/components/schemas/String4000"
        descrizione_sintetica:
          $ref: "#/components/schemas/String255"
        immagine:
          $ref: "#/components/schemas/DocumentoUpdate"
        tags:
          type: "array"
          items:
            $ref: "#/components/schemas/String255"
        termini_ricerca:
          $ref: "#/components/schemas/String255"
        note:
          $ref: "#/components/schemas/String1000"
        url_invocazione:
          $ref: "#/components/schemas/String255"
        url_prefix_collaudo:
          $ref: "#/components/schemas/String255"
        url_prefix_produzione:
          $ref: "#/components/schemas/String255"
    DocumentoSingolo:
      type: object
      required:
        - uuid
        - content_type
        - filename
      properties:
        uuid:
          type: "string"
          format: "uuid"
        versione:
          type: "integer"
          format: "int32"
        content_type:
          $ref: "#/components/schemas/String255"
        filename:
          $ref: "#/components/schemas/String255"
    Documento:
      allOf:
       - $ref: "#/components/schemas/DocumentoSingolo"
       - type: object
         properties:
          storico:
            type: array
            items:
              $ref: "#/components/schemas/DocumentoSingolo"
    DocumentoCreate:
      type: object
      required:
        - content
      properties:
        content_type:
          $ref: "#/components/schemas/String255"
        content:
          $ref: "#/components/schemas/Base64String"
        filename:
          $ref: "#/components/schemas/String255"
    DocumentoUpdate:
      type: object
      required:
      - tipo_documento
      properties:
        tipo_documento:
          type: string
          enum:
          - nuovo
          - uuid
          - uuid_copia
      discriminator:
        propertyName: "tipo_documento"
        mapping:
          nuovo: "#/components/schemas/DocumentoUpdateNew"
          uuid: "#/components/schemas/DocumentoUpdateId"
          uuid_copia: "#/components/schemas/DocumentoUpdateId"
    DocumentoUpdateNew:
      allOf:
        - $ref: '#/components/schemas/DocumentoUpdate'
        - type: object
          required:
            - content_type
            - content
          properties:
            content_type:
              $ref: "#/components/schemas/String255"
            content:
              $ref: "#/components/schemas/Base64String"
            filename:
              $ref: "#/components/schemas/String255"
    DocumentoUpdateId:
      allOf:
        - $ref: '#/components/schemas/DocumentoUpdate'
        - type: object
          properties:
            uuid:
              type: string
              format: uuid
    AllegatoMessaggioCreate:
      type: object
      required:
        - filename
        - content
      properties:
        filename:
          $ref: "#/components/schemas/String255"
        content_type:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        content:
          $ref: "#/components/schemas/Base64String"
    AllegatoCreate:
      type: array
      items:
        $ref: '#/components/schemas/AllegatoItemCreate'
    AllegatoItemCreate:
      type: object
      required:
        - filename
        - content
        - visibilita
        - tipologia
      properties:
        filename:
          $ref: "#/components/schemas/String255"
        content_type:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        visibilita:
          $ref: '#/components/schemas/VisibilitaAllegatoEnum'
        tipologia:
          $ref: '#/components/schemas/TipologiaAllegatoEnum'
        content:
          $ref: "#/components/schemas/Base64String"
    AllegatoUpdate:
      type: object
      required:
        - filename
        - content
        - visibilita
        - tipologia
      properties:
        filename:
          $ref: "#/components/schemas/String255"
        content_type:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        visibilita:
          $ref: '#/components/schemas/VisibilitaAllegatoEnum'
        tipologia:
          $ref: '#/components/schemas/TipologiaAllegatoEnum'
        content:
          $ref: '#/components/schemas/DocumentoUpdate'
    IdAllegatoUpdate:
      allOf:
        - $ref: '#/components/schemas/AllegatoUpdate'
        - type: object
          properties:
            uuid:
              type: string
              format: uuid
    AllegatoUpdateNew:
      allOf:
        - $ref: '#/components/schemas/AllegatoUpdate'
        - type: object
          required:
            - filename
            - content
          properties:
            filename:
                $ref: '#/components/schemas/FileName'
            tipo:
              $ref: '#/components/schemas/FileType'
            descrizione:
              $ref: "#/components/schemas/String255"
            data:
              type: "string"
              format: "date-time"
              example: "2017-07-21T17:32:28Z"
            visibilita:
              $ref: '#/components/schemas/VisibilitaAllegatoEnum'
            tipologia:
              $ref: '#/components/schemas/TipologiaAllegatoEnum'
            content:
              $ref: "#/components/schemas/Base64String"
    FileName:
        type: "string"
        maxLength: 255
        example: "nomefile.ext"
        pattern: ^[^\\<>:;,?"*]+$
    FileType:
        type: "string"
        maxLength: 255
        example: "txt"
        pattern: ^[\w]+$
    AllegatoList:
      type: array
      items:
        $ref: '#/components/schemas/Allegato'
    Allegato:
      type: object
      required:
        - uuid
        - filename
        - data
        - url
      properties:
        uuid:
          $ref: "#/components/schemas/String255"
        filename:
          $ref: "#/components/schemas/String255"
        content_type:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        data:
          type: "string"
          format: "date-time"
          example: "2017-07-21T17:32:28Z"
        visibilita:
          $ref: '#/components/schemas/VisibilitaAllegatoEnum'
        tipologia:
          $ref: '#/components/schemas/TipologiaAllegatoEnum'
        url:
          $ref: "#/components/schemas/URL"
    AllegatoMessaggio:
      type: object
      required:
        - uuid
        - filename
        - tipo
        - data
        - url
      properties:
        uuid:
          $ref: "#/components/schemas/String255"
        filename:
          $ref: "#/components/schemas/String255"
        content_type:
          $ref: "#/components/schemas/String255"
        descrizione:
          $ref: "#/components/schemas/String255"
        data:
          type: "string"
          format: "date-time"
          example: "2017-07-21T17:32:28Z"
        url:
          $ref: "#/components/schemas/URL"
    MessaggioCreate:
      type: object
      required:
        - oggetto
      properties:
        oggetto:
          $ref: "#/components/schemas/String255"
        testo:
          $ref: "#/components/schemas/String4000"
        allegati:
          type: "array"
          items:
            $ref: '#/components/schemas/AllegatoMessaggioCreate' 
    MessaggioUpdate:
      type: object
      required:
        - oggetto
      properties:
        oggetto:
          $ref: "#/components/schemas/String255"
        testo:
          $ref: "#/components/schemas/String4000"
    TipoComunicazione:
      type: string
      enum:
        - cambio_stato
        - messaggio
    ItemComunicazione:
      type: object
      required:
        - data
        - oggetto
      properties:
        tipo:
          $ref: "#/components/schemas/TipoComunicazione"
        uuid:
          type: "string"
          format: "uuid"
        data:
          type: "string"
          format: "date-time"
          example: "2017-07-21T17:32:28Z"
        autore:
          $ref: "#/components/schemas/ItemUtente"
        stato:
          $ref: "#/components/schemas/String255"
        oggetto:
          $ref: "#/components/schemas/String255"
        testo:
          $ref: "#/components/schemas/String255"
        allegati:
          type: "array"
          items:
            $ref: "#/components/schemas/AllegatoMessaggio"
    VisibilitaAllegatoEnum:
      type: "string"
      example: "pubblico"
      enum:
      - "pubblico"
      - "adesione"
      - "servizio"
      - "gestore"
    TipologiaAllegatoEnum:
      type: "string"
      example: "generico"
      enum:
      - "generico"
      - "specifica"
      - "specifica_collaudo"
      - "specifica_produzione"
    ItemAdesione:
      type: object
      required:
        - id_adesione
        - soggetto
        - servizio
        - stato
        - data_creazione
        - utente_creazione
      properties:
        id_adesione:
          $ref: "#/components/schemas/IdAdesione"
        soggetto:
          $ref: "#/components/schemas/ItemSoggetto"
        servizio:
          $ref: "#/components/schemas/ItemServizio"
        id_logico:
          $ref: "#/components/schemas/String255"
        skip_collaudo:
          type: "boolean"
          default: false
        stato:
          $ref: "#/components/schemas/String255"
        stato_configurazione_automatica:
          $ref: "#/components/schemas/StatoConfigurazioneAutomaticaEnum"
        messaggio_configurazione:
          $ref: "#/components/schemas/String4000"
        data_creazione:
          type: "string"
          format: "date-time"
        data_ultimo_aggiornamento:
          type: "string"
          format: "date-time"
        utente_richiedente:
          $ref: "#/components/schemas/ItemUtente"
    ErroreCambioStatoResponse:
      type: object
      required:
        - id_adesione
        - messaggi
      properties:
        id_adesione:
          $ref: "#/components/schemas/String255"
        messaggi:
          type: array
          items:
            $ref: "#/components/schemas/String255"
    AdesioniCambioStatoResponse:
      type: object
      required:
        - esito
        - numero_ok
        - numero_ko
      properties:
        esito:
          type: string
          enum:
           - ok
           - ko
        numero_ok:
          type: "integer"
          format: "int64"
        numero_ko:
          type: "integer"
          format: "int64"
        errori:
          type: array
          items:
            $ref: "#/components/schemas/ErroreCambioStatoResponse"
    Adesione:
      type: object
      required:
        - id_adesione
        - soggetto
        - servizio
        - stato
        - data_creazione
        - utente_richiedente
      properties:
        id_adesione:
          $ref: "#/components/schemas/IdAdesione"
        soggetto:
          $ref: "#/components/schemas/ItemSoggetto"
        servizio:
          $ref: "#/components/schemas/ItemServizio"
        id_logico:
          $ref: "#/components/schemas/String255"
        skip_collaudo:
          type: "boolean"
          default: false
        stato:
          $ref: "#/components/schemas/String255"
        stato_precedente:
          $ref: "#/components/schemas/String255"
        stato_configurazione_automatica:
          $ref: "#/components/schemas/StatoConfigurazioneAutomaticaEnum"
        messaggio_configurazione:
          $ref: "#/components/schemas/String4000"
        data_creazione:
          type: "string"
          format: "date-time"
        data_ultimo_aggiornamento:
          type: "string"
          format: "date-time"
        utente_richiedente:
          $ref: "#/components/schemas/ItemUtente"
        utente_ultimo_aggiornamento:
          $ref: "#/components/schemas/ItemUtente"
        client_richiesti:
          type: array
          items:
            $ref: "#/components/schemas/ClientRichiesto"
        erogazioni_richieste:
          type: array
          items:
            $ref: "#/components/schemas/ErogazioneRichiesta"
    StatoConfigurazioneAutomaticaEnum:
      type: string
      enum:
       - ok
       - ko
       - in_coda
       - retry
       - fallita
    StatoConfigurazioneAutomatica:
      type: object
      required:
        - stato
      properties:
        stato:
          $ref: "#/components/schemas/StatoConfigurazioneAutomaticaEnum"
        dettaglio_errore:
          $ref: "#/components/schemas/AuthTypeEnum"
    ClientRichiesto:
      type: object
      required:
        - profilo
      properties:
        profilo:
          $ref: "#/components/schemas/String255"
        auth_type:
          $ref: "#/components/schemas/AuthTypeEnum"
    ErogazioneRichiesta:
      type: object
      required:
        - api
      properties:
        api:
          $ref: "#/components/schemas/ItemApi"
    AdesioneCreate:
      type: object
      required:
        - id_soggetto
        - id_servizio
        - data_creazione
        - utente_creazione
      properties:
        id_soggetto:
          $ref: "#/components/schemas/IdSoggetto"
        id_servizio:
          $ref: "#/components/schemas/IdServizio"
        id_logico:
          $ref: "#/components/schemas/String255"
        referenti:
          type: "array"
          items:
            $ref: "#/components/schemas/ReferenteCreate"
    AdesioneUpdate:
      type: object
      properties:
        identificativo:
          $ref: "#/components/schemas/AdesioneIdentificativoUpdate"
        collaudo:
          $ref: "#/components/schemas/AdesioneCollaudoUpdate"
    AdesioneIdentificativoUpdate:
      type: object
      required:
        - id_soggetto
        - id_servizio
      properties:
        id_logico:
          $ref: "#/components/schemas/String255"
        id_soggetto:
          $ref: "#/components/schemas/IdSoggetto"
        id_servizio:
          $ref: "#/components/schemas/IdServizio"
        skip_collaudo:
          type: "boolean"
    AdesioneCollaudoUpdate:
      type: object
    TipoAdesioneClientUpdateEnum:
      type: "string"
      enum:
        - nuovo
        - riferito
        - proposto
    AdesioneClientUpdate:
      type: "object"
      required:
       - tipo_client
      properties:
        tipo_client:
          $ref: "#/components/schemas/TipoAdesioneClientUpdateEnum"
      discriminator:
          propertyName: tipo_client
          mapping:
            'nuovo':  '#/components/schemas/AdesioneClientCreate'
            'riferito': '#/components/schemas/AdesioneIdClient'
            'proposto': '#/components/schemas/AdesioneClientProposto'
    AdesioneClientProposto:
      allOf:
      - $ref: "#/components/schemas/AdesioneClientUpdate"
      - type: "object"
        required:
         - nome_proposto
         - ambiente
        properties:
          nome_proposto:
            $ref: "#/components/schemas/String255"
          ambiente:
            $ref: "#/components/schemas/AmbienteEnum"

    ItemErogazioneAdesione:
      type: "object"
      properties:
        id_erogazione:
          $ref: "#/components/schemas/IdErogazione"
        api:
          $ref: "#/components/schemas/ItemApi"
        url:
          $ref: "#/components/schemas/URL"
        indirizzi_ip:
          $ref: "#/components/schemas/String255"
        certificato_server:
          $ref: "#/components/schemas/CertificatoClient"
    AdesioneErogazioneUpdate:
      type: "object"
      required:
        - url
      properties:
        url:
          $ref: "#/components/schemas/URL"
        indirizzi_ip:
          $ref: "#/components/schemas/String255"
        certificato_server:
          $ref: "#/components/schemas/CertificatoClientCreate"
    # Schemi di base interni
    IdOrganizzazione:
      type: "string"
      format: "uuid"
    IdNotifica:
      type: "string"
      format: "uuid"
    IdSoggetto:
      type: "string"
      format: "uuid"
    IdClient:
      type: "string"
      format: "uuid"
    IdErogazione:
      type: "string"
      format: "uuid"
    IdClasseUtente:
      type: "string"
      format: "uuid"
    IdUtente:
      type: "string"
      format: "uuid"
    IdDominio:
      type: "string"
      format: "uuid"
    IdGruppo:
      type: "string"
      format: "uuid"
    IdServizio:
      type: "string"
      format: "uuid"
    IdAdesione:
      type: "string"
      format: "uuid"
    IdCategoria:
      type: "string"
      format: "uuid"
    IdTassonomia:
      type: "string"
      format: "uuid"
    IdMessaggio:
      type: "string"
      format: "uuid"
    IdAllegato:
      type: "string"
      format: "uuid"
    IdDocumento:
      type: "string"
      format: "uuid"
    IdApi:
      type: "string"
      format: "uuid"
    GenericSearchString:
      type: string
      maxLength: 255
      example: "user_1"
      pattern: "^[^\u0000]*$"
    # Schemi Standard
    Problem:
      type: "object"
      properties:
        detail:
          type: "string"
          description: "Un testo di descrizione comprensibile del problema occorso"
          example: "Connection to database timed out"
        instance:
          type: "string"
          description: "Collegamento ad una specifica occorrenza dove si è verificato il problema"
          format: "uri"
        status:
          maximum: 600
          exclusiveMaximum: true
          minimum: 100
          type: "integer"
          description: "Codice http restituito"
          format: "int32"
          example: 503
        title:
          type: "string"
          description: "Descrizione breve ed esplicativa del problema occorso"
        type:
          type: "string"
          description: "URI assoluta per la descrizione del problema occorso"
          format: "uri"
          example: "https://tools.ietf.org/html/rfc7231#section-6.6.4"
          default: "about:blank"
    UpdateEntitaComplessaProblem:
      allOf:
        - $ref: "#/components/schemas/Problem"
        - type: "object"
          properties:
            errori:
              type: "array"
              items:
                $ref: "#/components/schemas/EntitaComplessaError"
    URL:
      type: "string"
      format: "url"
      minLength: 1
      maxLength: 4000
    Email:
      type: "string"
      format: "email"
      minLength: 1
      maxLength: 255
    Base64String:
      type: "string"
      #format: "base64" dovrebbe essere byte ma così non funziona il generatore
    String255:
      type: "string"
      minLength: 1
      maxLength: 255
    String255OnlyNumbers:
      type: "string"
      minLength: 1
      maxLength: 255
      pattern: "^[1-9][0-9]*$"
    String1000:
      type: "string"
      minLength: 1
      maxLength: 1000
    String4000:
      type: "string"
      minLength: 1
      maxLength: 4000
    NomeValore:
      type: "object"
      additionalProperties:
        type: string
    Campo:
      type: "object"
      properties:
        nome_campo:
          $ref: "#/components/schemas/String255"
        custom:
          type: boolean
    SottotipoEnum:
      type: "string"
      enum:
       - api
       - tassonomia
       - client
       - erogazione
       - configurazione_gruppo
       - configurazione_nome
    Sottotipo:
      type: "object"
      properties:
        tipo:
          $ref: "#/components/schemas/SottotipoEnum"
        identificativo:
          $ref: "#/components/schemas/String255"
    EntitaComplessaError:
      type: "object"
      properties:
        sottotipo:
          type: array
          items:
            $ref: "#/components/schemas/Sottotipo"
        dato:
          $ref: "#/components/schemas/ConfigurazioneClasseDato"
        params:
          $ref: "#/components/schemas/NomeValore"
        campi:
          type: array
          items:
            $ref: "#/components/schemas/Campo"
  parameters:
    id_soggetto:
      name: "id_soggetto"
      in: "path"
      description: "identificativo Soggetto"
      required: true
      schema:
        $ref: "#/components/schemas/IdSoggetto"
    id_notifica:
      name: "id_notifica"
      in: "path"
      description: "identificativo Notifica"
      required: true
      schema:
        $ref: "#/components/schemas/IdNotifica"
    id_organizzazione:
      name: "id_organizzazione"
      in: "path"
      description: "identificativo Organizzazione"
      required: true
      schema:
        $ref: "#/components/schemas/IdOrganizzazione"
    id_classe_utente:
      name: "id_classe_utente"
      in: "path"
      description: "identificativo ClasseUtente"
      required: true
      schema:
        $ref: "#/components/schemas/IdClasseUtente"
    id_utente:
      name: "id_utente"
      in: "path"
      description: "identificativo Utente"
      required: true
      schema:
        $ref: "#/components/schemas/IdUtente"
    id_dominio:
      name: "id_dominio"
      in: "path"
      description: "identificativo Dominio"
      required: true
      schema:
        $ref: "#/components/schemas/IdDominio"
    id_gruppo:
      name: "id_gruppo"
      in: "path"
      description: "identificativo Gruppo"
      required: true
      schema:
        $ref: "#/components/schemas/IdGruppo"
    id_servizio:
      name: "id_servizio"
      in: "path"
      description: "identificativo Servizio"
      required: true
      schema:
        $ref: "#/components/schemas/IdServizio"
    id_package:
      name: "id_package"
      in: "path"
      description: "identificativo package"
      required: true
      schema:
        $ref: "#/components/schemas/IdServizio"
    id_componente:
      name: "id_componente"
      in: "path"
      description: "identificativo componente"
      required: true
      schema:
        $ref: "#/components/schemas/IdServizio"
    id_categoria:
      name: "id_categoria"
      in: "path"
      description: "identificativo Categoria"
      required: true
      schema:
        $ref: "#/components/schemas/IdCategoria"
    id_tassonomia:
      name: "id_tassonomia"
      in: "path"
      description: "identificativo Tassonomia"
      required: true
      schema:
        $ref: "#/components/schemas/IdTassonomia"
    id_adesione:
      name: "id_adesione"
      in: "path"
      description: "identificativo Adesione"
      required: true
      schema:
        $ref: "#/components/schemas/IdAdesione"
    id_messaggio:
      name: "id_messaggio"
      in: "path"
      description: "identificativo Messaggio"
      required: true
      schema:
        $ref: "#/components/schemas/IdMessaggio"
    id_allegato:
      name: "id_allegato"
      in: "path"
      description: "identificativo Allegato"
      required: true
      schema:
        $ref: "#/components/schemas/IdAllegato"
    id_api:
      name: "id_api"
      in: "path"
      description: "identificativo API"
      required: true
      schema:
        $ref: "#/components/schemas/IdApi"
    id_client:
      name: "id_client"
      in: "path"
      description: "identificativo Client"
      required: true
      schema:
        $ref: "#/components/schemas/IdClient"
    id_ambiente:
      name: "id_ambiente"
      in: "path"
      description: "identificativo Ambiente"
      required: true
      schema:
        $ref: "#/components/schemas/AmbienteEnum"
    id_transazione:
      name: "id_transazione"
      in: "path"
      description: "identificativo transazione"
      required: true
      schema:
        type: "string"
        format: "uuid"
    includi_doc_allegati_query_optional:
      name: "includi_doc_allegati"
      in: "query"
      description: "indica se includere i doc allegati nel download"
      required: false
      schema:
        type: boolean
    check_only_query_optional:
      name: "check_only"
      in: "query"
      description: "indica se condurre esclusivamente il check invece che svolgere l'operazione di cambio stato"
      required: false
      schema:
        type: boolean
    force_query_optional:
      name: "force"
      in: "query"
      description: "indica se forzare l'aggiornamento anche se l'operazione è semanticamente errata"
      required: false
      schema:
        type: boolean
    try_out_query_optional:
      name: "try_out"
      in: "query"
      description: "indica se deve essere effettuato il post processing per il try out"
      required: false
      schema:
        type: boolean
    id_client_query_optional:
      name: "id_client"
      in: "query"
      description: "identificativo del Client"
      required: false
      schema:
        $ref: "#/components/schemas/IdClient"
    id_api_query_optional:
      name: "id_api"
      in: "query"
      description: "identificativo della API"
      required: false
      schema:
        $ref: "#/components/schemas/IdApi"
    id_mittente_query_optional:
      name: "id_mittente"
      in: "query"
      description: "Mittente della notifica"
      required: false
      schema:
        $ref: "#/components/schemas/IdUtente"
    id_servizio_query_optional_multi:
      name: "id_servizio"
      in: "query"
      description: "identificativo del servizio"
      required: false
      schema:
        type: array
        items:
          $ref: "#/components/schemas/IdServizio"
    tipo_servizio_query_optional:
      name: "tipo_servizio"
      in: "query"
      description: "tipo servizio"
      required: false
      schema:
        $ref: "#/components/schemas/TipoServizio"
    tipo_gruppo_query_optional:
      name: "tipo_gruppo"
      in: "query"
      description: "tipo gruppo"
      required: false
      schema:
        $ref: "#/components/schemas/TipoServizio"
    id_servizio_query_optional:
      name: "id_servizio"
      in: "query"
      description: "identificativo del servizio"
      required: false
      schema:
        $ref: "#/components/schemas/IdServizio"
    ruolo_query_optional:
      name: "ruolo"
      in: "query"
      description: "ruolo della API"
      required: false
      schema:
        $ref: "#/components/schemas/RuoloAPIEnum"
    id_servizio_query_required:
      name: "id_servizio"
      in: "query"
      description: "identificativo del servizio"
      required: true
      schema:
        $ref: "#/components/schemas/IdServizio"
    data_da:
      name: "data_da"
      in: "query"
      description: "Data di inizio"
      required: true
      schema:
        type: "string"
        format: "date-time"
      example: "2019-09-21T17:32:28Z"
    data_a:
      name: "data_a"
      in: "query"
      description: "Data di fine"
      required: true
      schema:
        type: "string"
        format: "date-time"
      example: "2019-09-21T17:32:28Z"
    stato:
      name: "stato"
      in: "path"
      description: "Stato del servizio/adesione"
      required: true
      schema:
        $ref: "#/components/schemas/GenericSearchString"
    id_adesione_query_optional:
      name: "id_adesione"
      in: "query"
      description: "identificativo dell'adesione"
      required: false
      schema:
        $ref: "#/components/schemas/IdAdesione"
    page_query_optional:
      name: "page"
      in: "query"
      description: "numero di pagina di una richiesta paginata"
      required: false
      schema:
        type: integer
        format: int32
        default: 0
    size_query_optional:
      name: "size"
      in: "query"
      description: "dimensione della pagina di una richiesta paginata"
      required: false
      schema:
        type: integer
        format: int32
        default: 20
    sort_query_optional:
      name: "sort"
      in: "query"
      description: "ordinamento di una richiesta paginata"
      required: false
      schema:
        type: array
        items:
         type: string
    id_logico_query_optional:
      name: "id_logico"
      in: "query"
      description: "identificativo logico dell'adesione"
      required: false
      schema:
        type: "string"
    tipo_referente_classe_utente_query_optional:
      name: "tipo_referente"
      in: "query"
      description: "Tipo Referente su cui filtrare in ricerca e cancellazione"
      required: false
      schema:
        $ref: "#/components/schemas/TipoReferenteClasseUtenteEnum"
    tipo_referente_query_optional:
      name: "tipo_referente"
      in: "query"
      description: "Tipo Referente su cui filtrare in ricerca e cancellazione"
      required: false
      schema:
        $ref: "#/components/schemas/TipoReferenteEnum"
    tipologia_allegato_query_optional:
      name: "tipologia_allegato"
      in: "query"
      description: "Tipologia Allegato su cui filtrare in ricerca e cancellazione"
      required: false
      schema:
        $ref: "#/components/schemas/TipologiaAllegatoEnum"
    filename_query_optional:
      name: "filename"
      in: "query"
      description: "Nome file su cui filtrare in ricerca"
      required: false
      schema:
        type: "string"
    visibilita_allegato_query_optional:
      name: "visibilita_allegato"
      in: "query"
      description: "Visibilita Allegato su cui filtrare in ricerca e cancellazione"
      required: false
      schema:
        $ref: "#/components/schemas/VisibilitaAllegatoEnum"
    tipo_notifica_query_optional:
      name: "tipo_notifica"
      in: "query"
      description: "ricerca notifiche per tipo"
      required: false
      schema:
        $ref: "#/components/schemas/TipoNotificaEnum"
    tipo_entita_notifica_query_optional:
      name: "tipo_entita_notifica"
      in: "query"
      description: "ricerca notifiche per tipo entita"
      required: false
      schema:
        $ref: "#/components/schemas/TipoEntitaNotifica"
    id_entita_notifica_query_optional:
      name: "id_entita_notifica"
      in: "query"
      description: "ricerca notifiche per id entita"
      required: false
      schema:
        $ref: "#/components/schemas/IdServizio"
    stato_notifica_query_optional:
      name: "stato_notifica"
      in: "query"
      description: "ricerca notifiche per stato"
      required: false
      schema:
        type: array
        items:
          $ref: "#/components/schemas/StatoNotifica"
    q_query_optional:
      name: "q"
      in: "query"
      description: "query generica"
      required: false
      schema:
        $ref: "#/components/schemas/GenericSearchString"
    nome_query_optional:
      name: "nome"
      in: "query"
      description: "nome"
      required: false
      schema:
        $ref: "#/components/schemas/GenericSearchString"
    package_query_optional:
      name: "package"
      in: "query"
      description: "package"
      required: false
      schema:
        type: boolean
    versione_query_optional:
      name: "versione"
      in: "query"
      description: "versione"
      required: false
      schema:
        $ref: "#/components/schemas/GenericSearchString"
    stato_query_optional:
      name: "stato"
      in: "query"
      description: "Stato del servizio/adesione"
      required: false
      schema:
        type: array
        items:
          $ref: "#/components/schemas/GenericSearchString"
    stato_client_query_optional:
      name: "stato"
      in: "query"
      description: "Stato del servizio/adesione"
      required: false
      schema:
        $ref: "#/components/schemas/StatoClientEnum"
    richiedente_query_optional:
      name: "richiedente"
      in: "query"
      description: "Identificativo utente richiedente"
      required: false
      schema:
        $ref: "#/components/schemas/IdUtente"
    categoria_query_optional:
      name: "categoria"
      in: "query"
      description: "Categoria assegnata al servizio"
      required: false
      schema:
        type: array
        items:
          $ref: "#/components/schemas/GenericSearchString"
    miei_servizi_query_optional:
      name: "miei_servizi"
      in: "query"
      description: "Servizi di competenza dell'utente"
      required: false
      schema:
        type: "boolean"
    adesione_consentita_query_optional:
      name: "adesione_consentita"
      in: "query"
      description: "Servizi in uno stato in cui è possibile richiedere l'adesione"
      required: false
      schema:
        type: "boolean"
    in_attesa_query_optional:
      name: "in_attesa"
      in: "query"
      description: "Servizi in attesa di intervento da parte dell'utente"
      required: false
      schema:
        type: "boolean"
    stato_configurazione_automatica_query_optional:
      name: "stato_configurazione_automatica"
      in: "query"
      description: "Filtro per stato configurazione automatica"
      required: false
      schema:
          $ref: "#/components/schemas/StatoConfigurazioneAutomaticaEnum"
    tag_query_optional:
      name: "tag"
      in: "query"
      description: "identificativo tag"
      required: false
      schema:
        type: array
        items:
          $ref: "#/components/schemas/GenericSearchString"
    referente_query_optional:
      name: "referente"
      in: "query"
      description: "identificativo referente"
      required: false
      schema:
        $ref: "#/components/schemas/GenericSearchString"
    id_gruppo_padre_query_optional:
      name: "id_gruppo_padre"
      in: "query"
      description: "Identificativo gruppo"
      required: false
      schema:
        $ref: "#/components/schemas/IdGruppo"
    id_gruppo_query_optional:
      name: "id_gruppo"
      in: "query"
      description: "Identificativo gruppo"
      required: false
      schema:
        $ref: "#/components/schemas/IdGruppo"
    id_classe_utente_query_optional:
      name: "id_classe_utente"
      in: "query"
      description: "Identificativo classe utente"
      required: false
      schema:
        $ref: "#/components/schemas/IdClasseUtente"
    id_tassonomia_query_optional:
      name: "id_tassonomia"
      in: "query"
      description: "Identificativo tassonomia"
      required: false
      schema:
        $ref: "#/components/schemas/IdTassonomia"
    gruppo_padre_null_query_optional:
      name: "gruppo_padre_null"
      in: "query"
      description: "Filtro per gruppi a livello 'root'"
      required: false
      schema:
        type: boolean
    visibilita_servizio_query_optional:
      name: "visibilita"
      in: "query"
      description: "visibilita servizio"
      required: false
      schema:
        $ref: "#/components/schemas/VisibilitaServizioEnum"
    visibilita_dominio_query_optional:
      name: "visibilita"
      in: "query"
      description: "visibilita dominio"
      required: false
      schema:
        $ref: "#/components/schemas/VisibilitaDominioEnum"
    id_dominio_query_optional:
      name: "id_dominio"
      in: "query"
      description: "Identificativo dominio"
      required: false
      schema:
        $ref: "#/components/schemas/IdDominio"
    codice_ente_optional:
      name: "codice"
      in: "query"
      description: "codice ente"
      required: false
      schema:
        type: "string"
    codice_fiscale_ente_optional:
      name: "codice_fiscale"
      in: "query"
      description: "codice fiscale ente"
      required: false
      schema:
        type: "string"
    tipo_ente_optional:
      name: "tipo"
      in: "query"
      description: "tipo ente"
      required: false
      schema:
        type: "string"
    referente:
      name: "referente"
      in: "query"
      description: "ente referente"
      required: false
      schema:
        type: "boolean"
    aderente:
      name: "aderente"
      in: "query"
      description: "ente aderente"
      required: false
      schema:
        type: "boolean"
    esterna:
      name: "esterna"
      in: "query"
      description: "organizzazione esterna"
      required: false
      schema:
        type: "boolean"
    soggetto_aderente:
      name: "soggetto_aderente"
      in: "query"
      description: "organizzazione con almeno un soggetto aderente"
      required: false
      schema:
        type: "boolean"
    ids_adesione_query_optional:
      name: "id"
      in: "query"
      description: "lista di identificativi adesione"
      required: false
      schema:
        type: array
        items:
          $ref: "#/components/schemas/IdAdesione"
    id_organizzazione_query_optional:
      name: "id_organizzazione"
      in: "query"
      description: "Identificativo dell'organizzazione"
      required: false
      schema:
        $ref: "#/components/schemas/IdOrganizzazione"
    id_utente_query_optional:
      name: "id_utente"
      in: "query"
      description: "Identificativo dell'utente"
      required: false
      schema:
        $ref: "#/components/schemas/IdUtente"
    id_soggetto_query_optional:
      name: "id_soggetto"
      in: "query"
      description: "Identificativo del soggetto"
      required: false
      schema:
        $ref: "#/components/schemas/IdSoggetto"
    deprecato_query_optional:
      name: "deprecato"
      in: "query"
      description: "Indicazione se il dominio è deprecato"
      required: false
      schema:
        type: boolean
    esterno_query_optional:
      name: "esterno"
      in: "query"
      description: "Indicazione se il dominio è esterno"
      required: false
      schema:
        type: boolean
    ambiente_query_optional:
      name: "ambiente"
      in: "query"
      description: "Ambiente su cui è configurato il client"
      required: false
      schema:
        $ref: "#/components/schemas/AmbienteEnum"
    auth_type_query_optional:
      name: "auth_type"
      in: "query"
      description: "Auth type del client"
      required: false
      schema:
        $ref: "#/components/schemas/AuthTypeEnum"
    stato_utente_query_optional:
      name: "stato"
      in: "query"
      description: "Stato Utente"
      required: false
      schema:
        $ref: "#/components/schemas/StatoUtenteEnum"
    email_query_optional:
      name: "email"
      in: "query"
      description: "email Utente"
      required: false
      schema:
        type: string
    principal_query_optional:
      name: "principal"
      in: "query"
      description: "principal Utente"
      required: false
      schema:
        type: string
    referente_tecnico_query_optional:
      name: "referente_tecnico"
      in: "query"
      description: "indica se l'utente cercato deve essere referente tecnico"
      required: false
      schema:
        type: "boolean"
    ruoli_query_optional:
      name: "ruolo"
      in: "query"
      description: "ruoli da cercare (OR)"
      required: false
      schema:
        type: "array"
        items:
          $ref: "#/components/schemas/RuoloUtenteEnumSearch"
    classi_utente_query_optional:
      name: "classe_utente"
      in: "query"
      description: "classi utente da cercare (OR)"
      required: false
      schema:
        type: "array"
        items:
          $ref: "#/components/schemas/IdClasseUtente"
    profilo:
      name: "profilo"
      in: "path"
      description: "Identificativo del profilo di autorizzazione"
      required: true
      schema:
        type: "string"
    id_erogazione:
      name: "id_erogazione"
      in: "path"
      description: "Identificativo della erogazione"
      required: true
      schema:
        $ref: "#/components/schemas/IdErogazione"
  responses:
    "201Created":
      description: "Resource created"
      headers:
        Location:
          $ref: "#/components/headers/Location"
    "400BadRequest":
      description: "Bad Request"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    "401Unauthorized":
      description: "Non sono state fornite le credenziali necessarie"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    "403Forbidden":
      description: "Autorizzazione non concessa per l'operazione richiesta"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    "422UpdateEntitaComplessaSemanticamenteNonValida":
      description: "Update entita complessa non valida semanticamente"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/UpdateEntitaComplessaProblem"
    "404NotFound":
      description: "Not Found"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    "409Conflict":
      description: "Conflict (L'entità che si vuole creare risulta già esistente)"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    "429TooManyRequests":
      description: "Too many requests"
      headers:
        Retry-After:
          $ref: "#/components/headers/Retry-After"
        X-RateLimit-Limit:
          $ref: "#/components/headers/X-RateLimit-Limit"
        X-RateLimit-Remaining:
          $ref: "#/components/headers/X-RateLimit-Remaining"
        X-RateLimit-Reset:
          $ref: "#/components/headers/X-RateLimit-Reset"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    "503ServiceUnavailable":
      description: "Service Unavailable"
      headers:
        Retry-After:
          $ref: "#/components/headers/Retry-After"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    "default":
      description: "Unexpected error"
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
  headers:
    Retry-After:
      description: "Riprovare dopo un attesa minima di tot secondi. Vedi https://tools.ietf.org/html/rfc7231#section-7.1.3"
      schema:
        type: "integer"
        format: "int32"
    X-RateLimit-Limit:
      description: "Numero massimo di richieste accettate nell'intervallo corrente"
      schema:
        type: "integer"
        format: "int32"
    X-RateLimit-Remaining:
      description: "Numero di richieste residue nell'intervallo corrente"
      schema:
        type: "integer"
        format: "int32"
    X-RateLimit-Reset:
      description: "Numero di secondi al completamento dell'intervallo corrente"
      schema:
        type: "integer"
        format: "int32"
    Location:
      description: "Header Location inserito in una risposta ad una richiesta POST, terminata con successo 'http 201'.\nL'header indica l'id dell'oggetto creato."
      schema:
        type: "string"
